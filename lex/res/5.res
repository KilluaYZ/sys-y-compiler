int: K, (1, 1)
n: I, (1, 5)
;: D, (1, 6)
int: K, (2, 1)
QuickSort: I, (2, 5)
(: D, (2, 14)
int: K, (2, 15)
arr: I, (2, 19)
[: D, (2, 22)
]: D, (2, 23)
,int: K, (2, 25)
low: I, (2, 29)
,int: K, (2, 33)
high: I, (2, 37)
): D, (2, 41)
{: D, (3, 1)
if: K, (3, 7)
(: D, (3, 10)
low: I, (3, 11)
<: O, (3, 15)
high: I, (3, 17)
): D, (3, 21)
{: D, (3, 27)
int: K, (3, 37)
i: I, (3, 41)
;: D, (3, 42)
i: I, (3, 52)
=: O, (3, 54)
low: I, (3, 56)
;: D, (3, 59)
int: K, (3, 69)
j: I, (3, 73)
;: D, (3, 74)
j: I, (3, 84)
=: O, (3, 86)
high: I, (3, 88)
;: D, (3, 92)
int: K, (3, 102)
k: I, (3, 106)
;: D, (3, 107)
k: I, (3, 117)
=: O, (3, 119)
arr: I, (3, 121)
[: D, (3, 124)
low: I, (3, 125)
]: D, (3, 128)
;: D, (3, 129)
while: K, (3, 139)
(: D, (3, 145)
i: I, (3, 146)
<: O, (3, 148)
j: I, (3, 150)
): D, (3, 151)
{: D, (3, 161)
while: K, (3, 175)
(: D, (3, 180)
i: I, (3, 181)
<: O, (3, 183)
j: I, (3, 185)
&&arr: I, (3, 188)
[: D, (3, 191)
j: I, (3, 192)
]: D, (3, 193)
>: O, (3, 195)
k: I, (3, 197)
-: O, (3, 199)
1: C, (3, 201)
): D, (3, 202)
{: D, (3, 216)
j: I, (3, 234)
=: O, (3, 236)
j: I, (3, 238)
-: O, (3, 240)
1: C, (3, 242)
;: D, (3, 243)
}: D, (3, 257)
if: K, (3, 273)
(: D, (3, 275)
i: I, (3, 276)
<: O, (3, 278)
j: I, (3, 280)
): D, (3, 281)
{: D, (3, 295)
arr: I, (3, 313)
[: D, (3, 316)
i: I, (3, 317)
]: D, (3, 318)
=: O, (3, 320)
arr: I, (3, 322)
[: D, (3, 325)
j: I, (3, 326)
]: D, (3, 327)
;: D, (3, 328)
i: I, (3, 346)
=: O, (3, 348)
i: I, (3, 350)
+: O, (3, 352)
1: C, (3, 354)
;: D, (3, 355)
}: D, (3, 369)
while: K, (3, 385)
(: D, (3, 390)
i: I, (3, 391)
<: O, (3, 393)
j: I, (3, 395)
&&arr: I, (3, 398)
[: D, (3, 401)
i: I, (3, 402)
]: D, (3, 403)
<: O, (3, 405)
k: I, (3, 407)
): D, (3, 408)
{: D, (3, 422)
i: I, (3, 440)
=: O, (3, 442)
i: I, (3, 444)
+: O, (3, 446)
1: C, (3, 448)
;: D, (3, 449)
}: D, (3, 463)
if: K, (3, 479)
(: D, (3, 481)
i: I, (3, 482)
<: O, (3, 484)
j: I, (3, 486)
): D, (3, 487)
{: D, (3, 501)
arr: I, (3, 519)
[: D, (3, 522)
j: I, (3, 523)
]: D, (3, 524)
=: O, (3, 526)
arr: I, (3, 528)
[: D, (3, 531)
i: I, (3, 532)
]: D, (3, 533)
;: D, (3, 534)
j: I, (3, 552)
=: O, (3, 554)
j: I, (3, 556)
-: O, (3, 558)
1: C, (3, 560)
;: D, (3, 561)
}: D, (3, 575)
}: D, (3, 585)
arr: I, (3, 597)
[: D, (3, 600)
i: I, (3, 601)
]: D, (3, 602)
=: O, (3, 604)
k: I, (3, 606)
;: D, (3, 607)
int: K, (3, 617)
tmp: I, (3, 621)
;: D, (3, 624)
tmp: I, (3, 634)
=: O, (3, 638)
i: I, (3, 640)
-: O, (3, 642)
1: C, (3, 644)
;: D, (3, 645)
tmp: I, (3, 655)
=: O, (3, 659)
QuickSort: I, (3, 661)
(: D, (3, 670)
arr: I, (3, 671)
,low: I, (3, 675)
,tmp: I, (3, 679)
): D, (3, 682)
;: D, (3, 683)
tmp: I, (3, 693)
=: O, (3, 697)
i: I, (3, 699)
+: O, (3, 701)
1: C, (3, 703)
;: D, (3, 704)
tmp: I, (3, 714)
=: O, (3, 718)
QuickSort: I, (3, 720)
(: D, (3, 729)
arr: I, (3, 730)
,tmp: I, (3, 734)
,high: I, (3, 738)
): D, (3, 742)
;: D, (3, 743)
}: D, (3, 749)
return: I, (3, 755)
0: C, (3, 762)
;: D, (3, 763)
}: D, (4, 1)
int: K, (4, 4)
main: I, (4, 8)
(: D, (4, 12)
): D, (4, 13)
{: D, (4, 14)
n: I, (4, 20)
=: O, (4, 22)
10: C, (4, 24)
;: D, (4, 26)
int: K, (4, 32)
a: I, (4, 36)
[: D, (4, 37)
10: C, (4, 38)
]: D, (4, 40)
;: D, (4, 41)
a: I, (4, 47)
[: D, (4, 48)
0: C, (4, 49)
]: D, (4, 50)
=: O, (4, 51)
4: C, (4, 52)
;: D, (4, 53)
a: I, (4, 54)
[: D, (4, 55)
1: C, (4, 56)
]: D, (4, 57)
=: O, (4, 58)
3: C, (4, 59)
;: D, (4, 60)
a: I, (4, 61)
[: D, (4, 62)
2: C, (4, 63)
]: D, (4, 64)
=: O, (4, 65)
9: C, (4, 66)
;: D, (4, 67)
a: I, (4, 68)
[: D, (4, 69)
3: C, (4, 70)
]: D, (4, 71)
=: O, (4, 72)
2: C, (4, 73)
;: D, (4, 74)
a: I, (4, 75)
[: D, (4, 76)
4: C, (4, 77)
]: D, (4, 78)
=: O, (4, 79)
0: C, (4, 80)
;: D, (4, 81)
a: I, (4, 87)
[: D, (4, 88)
5: C, (4, 89)
]: D, (4, 90)
=: O, (4, 91)
1: C, (4, 92)
;: D, (4, 93)
a: I, (4, 94)
[: D, (4, 95)
6: C, (4, 96)
]: D, (4, 97)
=: O, (4, 98)
6: C, (4, 99)
;: D, (4, 100)
a: I, (4, 101)
[: D, (4, 102)
7: C, (4, 103)
]: D, (4, 104)
=: O, (4, 105)
5: C, (4, 106)
;: D, (4, 107)
a: I, (4, 108)
[: D, (4, 109)
8: C, (4, 110)
]: D, (4, 111)
=: O, (4, 112)
7: C, (4, 113)
;: D, (4, 114)
a: I, (4, 115)
[: D, (4, 116)
9: C, (4, 117)
]: D, (4, 118)
=: O, (4, 119)
8: C, (4, 120)
;: D, (4, 121)
int: K, (4, 127)
i: I, (4, 131)
;: D, (4, 132)
i: I, (4, 138)
=: O, (4, 140)
0: C, (4, 142)
;: D, (4, 143)
int: K, (4, 149)
tmp: I, (4, 153)
;: D, (4, 156)
tmp: I, (4, 162)
=: O, (4, 166)
9: C, (4, 168)
;: D, (4, 169)
i: I, (4, 175)
=: O, (4, 177)
QuickSort: I, (4, 179)
(: D, (4, 188)
a: I, (4, 189)
,i: I, (4, 191)
,tmp: I, (4, 193)
): D, (4, 196)
;: D, (4, 197)
while: K, (4, 203)
(: D, (4, 209)
i: I, (4, 210)
<: O, (4, 212)
n: I, (4, 214)
): D, (4, 215)
{: D, (4, 217)
int: K, (4, 227)
tmp: I, (4, 231)
;: D, (4, 234)
tmp: I, (4, 244)
=: O, (4, 248)
a: I, (4, 250)
[: D, (4, 251)
i: I, (4, 252)
]: D, (4, 253)
;: D, (4, 254)
putint: I, (4, 264)
(: D, (4, 270)
tmp: I, (4, 271)
): D, (4, 274)
;: D, (4, 275)
tmp: I, (4, 285)
=: O, (4, 289)
10: C, (4, 291)
;: D, (4, 293)
putch: I, (4, 303)
(: D, (4, 308)
tmp: I, (4, 309)
): D, (4, 312)
;: D, (4, 313)
i: I, (4, 323)
=: O, (4, 325)
i: I, (4, 327)
+: O, (4, 329)
1: C, (4, 331)
;: D, (4, 332)
}: D, (4, 338)
return: I, (4, 344)
0: C, (4, 351)
;: D, (4, 352)
}: D, (5, 1)
