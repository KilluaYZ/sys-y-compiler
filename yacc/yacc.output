Terminals unused in grammar

    T_NULL
    T_WHILE
    T_DO
    T_FOR
    T_VAR
    T_BOOL_TRUE
    T_BOOL_FALSE
    T_NEWLINE
    T_ERRORCHAR
    T_HEX_CONST
    T_DEC_CONST
    T_OCT_CONST


Rules useless in parser due to conflicts

   67 Stmt1: ε


State 195 conflicts: 1 shift/reduce, 16 reduce/reduce


Grammar

    0 $accept: CompRoot $end

    1 CompRoot: CompUnit

    2 CompUnit: CompUnit FuncDef
    3         | CompUnit Decl
    4         | FuncDef
    5         | Decl

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    7        | T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block
    9        | T_INT T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block

   10 Decl: constDecl
   11     | VarDecl

   12 constDecl: T_CONST T_INT ConstDef T_DELIMITER
   13          | T_CONST T_INT ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER

   14 constDeclRepeat: ε
   15                | T_COMMA ConstDef constDeclRepeat

   16 ConstDef: T_IDENT T_DEFINE ConstInitVal
   17         | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

   18 ConstDefRepeat: ε
   19               | T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat

   20 ConstInitVal: ConstExp
   21             | T_LEFT_BRACE T_RIGHT_BRACE
   22             | T_LEFT_BRACE ConstInitVal T_RIGHT_BRACE
   23             | T_LEFT_BRACE T_COMMA ConstInitVal ConstInitValRepeat T_RIGHT_BRACE

   24 ConstInitValRepeat: ε
   25                   | T_COMMA ConstInitVal ConstInitValRepeat

   26 VarDecl: T_INT VarDef T_DELIMITER
   27        | T_INT VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER

   28 VarDeclRepeat: ε
   29              | T_COMMA VarDef VarDeclRepeat

   30 VarDef: T_IDENT
   31       | T_IDENT T_DEFINE InitVal
   32       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

   34 VarDefRepeat: ε
   35             | T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat

   36 InitVal: Exp
   37        | T_LEFT_BRACE InitVal T_RIGHT_BRACE
   38        | T_LEFT_BRACE T_COMMA InitVal InitValRepeat T_RIGHT_BRACE
   39        | T_LEFT_BRACE T_RIGHT_BRACE

   40 InitValRepeat: ε
   41              | T_COMMA InitVal InitValRepeat

   42 FuncFParams: FuncFParam
   43            | FuncFParam T_COMMA FuncFParam FuncFParamsRepeat

   44 FuncFParamsRepeat: ε
   45                  | T_COMMA FuncFParam FuncFParamsRepeat

   46 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET T_RIGHT_BRACKET
   47           | T_INT T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat
   48           | T_INT T_IDENT

   49 FuncFParamRepeat: ε
   50                 | T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat

   51 Block: T_LEFT_BRACE T_RIGHT_BRACE
   52      | T_LEFT_BRACE BlockItem BlockRepeat T_RIGHT_BRACE

   53 BlockRepeat: ε
   54            | BlockItem BlockRepeat

   55 BlockItem: Decl
   56          | Stmt

   57 Stmt: LVal T_DEFINE Exp T_DELIMITER
   58     | T_DELIMITER
   59     | Exp T_DELIMITER
   60     | Block
   61     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
   62     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1
   63     | T_BREAK T_DELIMITER
   64     | T_CONTINUE T_DELIMITER
   65     | T_RETURN T_DELIMITER
   66     | T_RETURN Exp T_DELIMITER

   67 Stmt1: ε
   68      | T_ELSE Stmt

   69 Exp: AddExp

   70 Cond: LOrExp

   71 LVal: T_IDENT
   72     | T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat

   73 LValRepeat: ε
   74           | T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat

   75 PrimaryExp: T_LEFT_PARENTHESIS Exp T_RIGHT_PARENTHESIS
   76           | LVal
   77           | Number

   78 Number: T_INTEGER_CONST

   79 UnaryExp: PrimaryExp
   80         | T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS
   81         | T_IDENT T_LEFT_PARENTHESIS FuncRParams T_RIGHT_PARENTHESIS
   82         | UnaryOp UnaryExp

   83 UnaryOp: T_ADD
   84        | T_SUB
   85        | T_NOT

   86 FuncRParams: Exp
   87            | Exp T_COMMA Exp FuncRParamsRepeat

   88 FuncRParamsRepeat: ε
   89                  | T_COMMA Exp FuncRParamsRepeat

   90 MulExp: UnaryExp
   91       | MulExp T_MUL UnaryExp
   92       | MulExp T_DIV UnaryExp
   93       | MulExp T_MOD UnaryExp

   94 AddExp: MulExp
   95       | AddExp T_ADD MulExp
   96       | AddExp T_SUB MulExp

   97 RelExp: AddExp
   98       | RelExp T_LESS AddExp
   99       | RelExp T_LARGE AddExp
  100       | RelExp T_LESS_EQUAL AddExp
  101       | RelExp T_LARGE_EQUAL AddExp

  102 EqExp: RelExp
  103      | EqExp T_EQUAL RelExp
  104      | EqExp T_NOT_EQUAL RelExp

  105 LAndExp: EqExp
  106        | LAndExp T_AND EqExp

  107 LOrExp: LAndExp
  108       | LOrExp T_OR LAndExp

  109 ConstExp: AddExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_NULL <y_id> (258)
    T_INT <y_id> (259) 7 9 12 13 26 27 46 47 48
    T_VOID <y_id> (260) 6 8
    T_CONST <y_id> (261) 12 13
    T_WHILE <y_id> (262)
    T_BREAK <y_id> (263) 63
    T_CONTINUE <y_id> (264) 64
    T_DO <y_id> (265)
    T_RETURN <y_id> (266) 65 66
    T_IF <y_id> (267) 61 62
    T_FOR <y_id> (268)
    T_ELSE <y_id> (269) 68
    T_VAR <y_id> (270)
    T_LEFT_PARENTHESIS <y_id> (271) 6 7 8 9 61 62 75 80 81
    T_RIGHT_PARENTHESIS <y_id> (272) 6 7 8 9 61 62 75 80 81
    T_LEFT_BRACKET <y_id> (273) 17 19 32 33 35 46 47 50 72 74
    T_RIGHT_BRACKET <y_id> (274) 17 19 32 33 35 46 47 50 72 74
    T_LEFT_BRACE <y_id> (275) 21 22 23 37 38 39 51 52
    T_RIGHT_BRACE <y_id> (276) 21 22 23 37 38 39 51 52
    T_DEFINE <y_id> (277) 16 17 31 33 57
    T_NOT <y_id> (278) 85
    T_BOOL_TRUE <y_id> (279)
    T_BOOL_FALSE <y_id> (280)
    T_DELIMITER <y_id> (281) 12 13 26 27 57 58 59 63 64 65 66
    T_NEWLINE <y_id> (282)
    T_ERRORCHAR <y_id> (283)
    T_IDENT <y_id> (284) 6 7 8 9 16 17 30 31 32 33 46 47 48 71 72 80 81
    T_COMMA <y_id> (285) 13 15 23 25 27 29 38 41 43 45 87 89
    T_INTEGER_CONST <y_int> (286) 78
    T_HEX_CONST <y_int> (287)
    T_DEC_CONST <y_int> (288)
    T_OCT_CONST <y_int> (289)
    T_ADD <y_id> (290) 83 95
    T_SUB <y_id> (291) 84 96
    T_MUL <y_id> (292) 91
    T_DIV <y_id> (293) 92
    T_MOD <y_id> (294) 93
    T_EQUAL <y_id> (295) 103
    T_NOT_EQUAL <y_id> (296) 104
    T_LARGE <y_id> (297) 99
    T_LESS <y_id> (298) 98
    T_LARGE_EQUAL <y_id> (299) 101
    T_LESS_EQUAL <y_id> (300) 100
    T_OR <y_id> (301) 108
    T_AND <y_id> (302) 106


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    CompRoot <y_node> (49)
        on left: 1
        on right: 0
    CompUnit <y_node> (50)
        on left: 2 3 4 5
        on right: 1 2 3
    FuncDef <y_node> (51)
        on left: 6 7 8 9
        on right: 2 4
    Decl <y_node> (52)
        on left: 10 11
        on right: 3 5 55
    constDecl <y_node> (53)
        on left: 12 13
        on right: 10
    constDeclRepeat <y_node> (54)
        on left: 14 15
        on right: 13 15
    ConstDef <y_node> (55)
        on left: 16 17
        on right: 12 13 15
    ConstDefRepeat <y_node> (56)
        on left: 18 19
        on right: 17 19
    ConstInitVal <y_node> (57)
        on left: 20 21 22 23
        on right: 16 17 22 23 25
    ConstInitValRepeat <y_node> (58)
        on left: 24 25
        on right: 23 25
    VarDecl <y_node> (59)
        on left: 26 27
        on right: 11
    VarDeclRepeat <y_node> (60)
        on left: 28 29
        on right: 27 29
    VarDef <y_node> (61)
        on left: 30 31 32 33
        on right: 26 27 29
    VarDefRepeat <y_node> (62)
        on left: 34 35
        on right: 32 33 35
    InitVal <y_node> (63)
        on left: 36 37 38 39
        on right: 31 33 37 38 41
    InitValRepeat <y_node> (64)
        on left: 40 41
        on right: 38 41
    FuncFParams <y_node> (65)
        on left: 42 43
        on right: 6 7
    FuncFParamsRepeat <y_node> (66)
        on left: 44 45
        on right: 43 45
    FuncFParam <y_node> (67)
        on left: 46 47 48
        on right: 42 43 45
    FuncFParamRepeat <y_node> (68)
        on left: 49 50
        on right: 47 50
    Block <y_node> (69)
        on left: 51 52
        on right: 6 7 8 9 60
    BlockRepeat <y_node> (70)
        on left: 53 54
        on right: 52 54
    BlockItem <y_node> (71)
        on left: 55 56
        on right: 52 54
    Stmt <y_node> (72)
        on left: 57 58 59 60 61 62 63 64 65 66
        on right: 56 61 62 68
    Stmt1 <y_node> (73)
        on left: 67 68
        on right: 62
    Exp <y_node> (74)
        on left: 69
        on right: 36 47 50 57 59 66 72 74 75 86 87 89
    Cond <y_node> (75)
        on left: 70
        on right: 61 62
    LVal <y_node> (76)
        on left: 71 72
        on right: 57 76
    LValRepeat <y_node> (77)
        on left: 73 74
        on right: 72 74
    PrimaryExp <y_node> (78)
        on left: 75 76 77
        on right: 79
    Number <y_node> (79)
        on left: 78
        on right: 77
    UnaryExp <y_node> (80)
        on left: 79 80 81 82
        on right: 82 90 91 92 93
    UnaryOp <y_node> (81)
        on left: 83 84 85
        on right: 82
    FuncRParams <y_node> (82)
        on left: 86 87
        on right: 81
    FuncRParamsRepeat <y_node> (83)
        on left: 88 89
        on right: 87 89
    MulExp <y_node> (84)
        on left: 90 91 92 93
        on right: 91 92 93 94 95 96
    AddExp <y_node> (85)
        on left: 94 95 96
        on right: 69 95 96 97 98 99 100 101 109
    RelExp <y_node> (86)
        on left: 97 98 99 100 101
        on right: 98 99 100 101 102 103 104
    EqExp <y_node> (87)
        on left: 102 103 104
        on right: 103 104 105 106
    LAndExp <y_node> (88)
        on left: 105 106
        on right: 106 107 108
    LOrExp <y_node> (89)
        on left: 107 108
        on right: 70 108
    ConstExp <y_node> (90)
        on left: 109
        on right: 17 19 20 32 33 35


State 0

    0 $accept: • CompRoot $end

    T_INT    shift, and go to state 1
    T_VOID   shift, and go to state 2
    T_CONST  shift, and go to state 3

    CompRoot   go to state 4
    CompUnit   go to state 5
    FuncDef    go to state 6
    Decl       go to state 7
    constDecl  go to state 8
    VarDecl    go to state 9


State 1

    7 FuncDef: T_INT • T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    9        | T_INT • T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block
   26 VarDecl: T_INT • VarDef T_DELIMITER
   27        | T_INT • VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 10

    VarDef  go to state 11


State 2

    6 FuncDef: T_VOID • T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID • T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block

    T_IDENT  shift, and go to state 12


State 3

   12 constDecl: T_CONST • T_INT ConstDef T_DELIMITER
   13          | T_CONST • T_INT ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER

    T_INT  shift, and go to state 13


State 4

    0 $accept: CompRoot • $end

    $end  shift, and go to state 14


State 5

    1 CompRoot: CompUnit •
    2 CompUnit: CompUnit • FuncDef
    3         | CompUnit • Decl

    T_INT    shift, and go to state 1
    T_VOID   shift, and go to state 2
    T_CONST  shift, and go to state 3

    $default  reduce using rule 1 (CompRoot)

    FuncDef    go to state 15
    Decl       go to state 16
    constDecl  go to state 8
    VarDecl    go to state 9


State 6

    4 CompUnit: FuncDef •

    $default  reduce using rule 4 (CompUnit)


State 7

    5 CompUnit: Decl •

    $default  reduce using rule 5 (CompUnit)


State 8

   10 Decl: constDecl •

    $default  reduce using rule 10 (Decl)


State 9

   11 Decl: VarDecl •

    $default  reduce using rule 11 (Decl)


State 10

    7 FuncDef: T_INT T_IDENT • T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    9        | T_INT T_IDENT • T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block
   30 VarDef: T_IDENT •
   31       | T_IDENT • T_DEFINE InitVal
   32       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 17
    T_LEFT_BRACKET      shift, and go to state 18
    T_DEFINE            shift, and go to state 19

    $default  reduce using rule 30 (VarDef)


State 11

   26 VarDecl: T_INT VarDef • T_DELIMITER
   27        | T_INT VarDef • T_COMMA VarDef VarDeclRepeat T_DELIMITER

    T_DELIMITER  shift, and go to state 20
    T_COMMA      shift, and go to state 21


State 12

    6 FuncDef: T_VOID T_IDENT • T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID T_IDENT • T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block

    T_LEFT_PARENTHESIS  shift, and go to state 22


State 13

   12 constDecl: T_CONST T_INT • ConstDef T_DELIMITER
   13          | T_CONST T_INT • ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 23

    ConstDef  go to state 24


State 14

    0 $accept: CompRoot $end •

    $default  accept


State 15

    2 CompUnit: CompUnit FuncDef •

    $default  reduce using rule 2 (CompUnit)


State 16

    3 CompUnit: CompUnit Decl •

    $default  reduce using rule 3 (CompUnit)


State 17

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS • FuncFParams T_RIGHT_PARENTHESIS Block
    9        | T_INT T_IDENT T_LEFT_PARENTHESIS • T_RIGHT_PARENTHESIS Block

    T_INT                shift, and go to state 25
    T_RIGHT_PARENTHESIS  shift, and go to state 26

    FuncFParams  go to state 27
    FuncFParam   go to state 28


State 18

   32 VarDef: T_IDENT T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 42


State 19

   31 VarDef: T_IDENT T_DEFINE • InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 44
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 20

   26 VarDecl: T_INT VarDef T_DELIMITER •

    $default  reduce using rule 26 (VarDecl)


State 21

   27 VarDecl: T_INT VarDef T_COMMA • VarDef VarDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 47

    VarDef  go to state 48


State 22

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS • FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID T_IDENT T_LEFT_PARENTHESIS • T_RIGHT_PARENTHESIS Block

    T_INT                shift, and go to state 25
    T_RIGHT_PARENTHESIS  shift, and go to state 49

    FuncFParams  go to state 50
    FuncFParam   go to state 28


State 23

   16 ConstDef: T_IDENT • T_DEFINE ConstInitVal
   17         | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

    T_LEFT_BRACKET  shift, and go to state 51
    T_DEFINE        shift, and go to state 52


State 24

   12 constDecl: T_CONST T_INT ConstDef • T_DELIMITER
   13          | T_CONST T_INT ConstDef • T_COMMA ConstDef constDeclRepeat T_DELIMITER

    T_DELIMITER  shift, and go to state 53
    T_COMMA      shift, and go to state 54


State 25

   46 FuncFParam: T_INT • T_IDENT T_LEFT_BRACKET T_RIGHT_BRACKET
   47           | T_INT • T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat
   48           | T_INT • T_IDENT

    T_IDENT  shift, and go to state 55


State 26

    9 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 57


State 27

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams • T_RIGHT_PARENTHESIS Block

    T_RIGHT_PARENTHESIS  shift, and go to state 58


State 28

   42 FuncFParams: FuncFParam •
   43            | FuncFParam • T_COMMA FuncFParam FuncFParamsRepeat

    T_COMMA  shift, and go to state 59

    $default  reduce using rule 42 (FuncFParams)


State 29

   75 PrimaryExp: T_LEFT_PARENTHESIS • Exp T_RIGHT_PARENTHESIS

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 60
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 30

   85 UnaryOp: T_NOT •

    $default  reduce using rule 85 (UnaryOp)


State 31

   71 LVal: T_IDENT •
   72     | T_IDENT • T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat
   80 UnaryExp: T_IDENT • T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS
   81         | T_IDENT • T_LEFT_PARENTHESIS FuncRParams T_RIGHT_PARENTHESIS

    T_LEFT_PARENTHESIS  shift, and go to state 61
    T_LEFT_BRACKET      shift, and go to state 62

    $default  reduce using rule 71 (LVal)


State 32

   78 Number: T_INTEGER_CONST •

    $default  reduce using rule 78 (Number)


State 33

   83 UnaryOp: T_ADD •

    $default  reduce using rule 83 (UnaryOp)


State 34

   84 UnaryOp: T_SUB •

    $default  reduce using rule 84 (UnaryOp)


State 35

   76 PrimaryExp: LVal •

    $default  reduce using rule 76 (PrimaryExp)


State 36

   79 UnaryExp: PrimaryExp •

    $default  reduce using rule 79 (UnaryExp)


State 37

   77 PrimaryExp: Number •

    $default  reduce using rule 77 (PrimaryExp)


State 38

   90 MulExp: UnaryExp •

    $default  reduce using rule 90 (MulExp)


State 39

   82 UnaryExp: UnaryOp • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 63
    UnaryOp     go to state 39


State 40

   91 MulExp: MulExp • T_MUL UnaryExp
   92       | MulExp • T_DIV UnaryExp
   93       | MulExp • T_MOD UnaryExp
   94 AddExp: MulExp •

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65
    T_MOD  shift, and go to state 66

    $default  reduce using rule 94 (AddExp)


State 41

   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp
  109 ConstExp: AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 109 (ConstExp)


State 42

   32 VarDef: T_IDENT T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_RIGHT_BRACKET  shift, and go to state 69


State 43

   37 InitVal: T_LEFT_BRACE • InitVal T_RIGHT_BRACE
   38        | T_LEFT_BRACE • T_COMMA InitVal InitValRepeat T_RIGHT_BRACE
   39        | T_LEFT_BRACE • T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_RIGHT_BRACE       shift, and go to state 70
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_COMMA             shift, and go to state 71
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 72
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 44

   31 VarDef: T_IDENT T_DEFINE InitVal •

    $default  reduce using rule 31 (VarDef)


State 45

   36 InitVal: Exp •

    $default  reduce using rule 36 (InitVal)


State 46

   69 Exp: AddExp •
   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 69 (Exp)


State 47

   30 VarDef: T_IDENT •
   31       | T_IDENT • T_DEFINE InitVal
   32       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_LEFT_BRACKET  shift, and go to state 18
    T_DEFINE        shift, and go to state 19

    $default  reduce using rule 30 (VarDef)


State 48

   27 VarDecl: T_INT VarDef T_COMMA VarDef • VarDeclRepeat T_DELIMITER

    T_COMMA  shift, and go to state 73

    $default  reduce using rule 28 (VarDeclRepeat)

    VarDeclRepeat  go to state 74


State 49

    8 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 75


State 50

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams • T_RIGHT_PARENTHESIS Block

    T_RIGHT_PARENTHESIS  shift, and go to state 76


State 51

   17 ConstDef: T_IDENT T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 77


State 52

   16 ConstDef: T_IDENT T_DEFINE • ConstInitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 79
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 53

   12 constDecl: T_CONST T_INT ConstDef T_DELIMITER •

    $default  reduce using rule 12 (constDecl)


State 54

   13 constDecl: T_CONST T_INT ConstDef T_COMMA • ConstDef constDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 23

    ConstDef  go to state 81


State 55

   46 FuncFParam: T_INT T_IDENT • T_LEFT_BRACKET T_RIGHT_BRACKET
   47           | T_INT T_IDENT • T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat
   48           | T_INT T_IDENT •

    T_LEFT_BRACKET  shift, and go to state 82

    $default  reduce using rule 48 (FuncFParam)


State 56

   51 Block: T_LEFT_BRACE • T_RIGHT_BRACE
   52      | T_LEFT_BRACE • BlockItem BlockRepeat T_RIGHT_BRACE

    T_INT               shift, and go to state 83
    T_CONST             shift, and go to state 3
    T_BREAK             shift, and go to state 84
    T_CONTINUE          shift, and go to state 85
    T_RETURN            shift, and go to state 86
    T_IF                shift, and go to state 87
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_RIGHT_BRACE       shift, and go to state 88
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 89
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Decl        go to state 90
    constDecl   go to state 8
    VarDecl     go to state 9
    Block       go to state 91
    BlockItem   go to state 92
    Stmt        go to state 93
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 57

    9 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 9 (FuncDef)


State 58

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 96


State 59

   43 FuncFParams: FuncFParam T_COMMA • FuncFParam FuncFParamsRepeat

    T_INT  shift, and go to state 25

    FuncFParam  go to state 97


State 60

   75 PrimaryExp: T_LEFT_PARENTHESIS Exp • T_RIGHT_PARENTHESIS

    T_RIGHT_PARENTHESIS  shift, and go to state 98


State 61

   80 UnaryExp: T_IDENT T_LEFT_PARENTHESIS • T_RIGHT_PARENTHESIS
   81         | T_IDENT T_LEFT_PARENTHESIS • FuncRParams T_RIGHT_PARENTHESIS

    T_LEFT_PARENTHESIS   shift, and go to state 29
    T_RIGHT_PARENTHESIS  shift, and go to state 99
    T_NOT                shift, and go to state 30
    T_IDENT              shift, and go to state 31
    T_INTEGER_CONST      shift, and go to state 32
    T_ADD                shift, and go to state 33
    T_SUB                shift, and go to state 34

    Exp          go to state 100
    LVal         go to state 35
    PrimaryExp   go to state 36
    Number       go to state 37
    UnaryExp     go to state 38
    UnaryOp      go to state 39
    FuncRParams  go to state 101
    MulExp       go to state 40
    AddExp       go to state 46


State 62

   72 LVal: T_IDENT T_LEFT_BRACKET • Exp T_RIGHT_BRACKET LValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 102
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 63

   82 UnaryExp: UnaryOp UnaryExp •

    $default  reduce using rule 82 (UnaryExp)


State 64

   91 MulExp: MulExp T_MUL • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 103
    UnaryOp     go to state 39


State 65

   92 MulExp: MulExp T_DIV • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 104
    UnaryOp     go to state 39


State 66

   93 MulExp: MulExp T_MOD • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 105
    UnaryOp     go to state 39


State 67

   95 AddExp: AddExp T_ADD • MulExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 106


State 68

   96 AddExp: AddExp T_SUB • MulExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 107


State 69

   32 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • VarDefRepeat T_DEFINE InitVal

    T_LEFT_BRACKET  shift, and go to state 108

    $default  reduce using rule 34 (VarDefRepeat)

    VarDefRepeat  go to state 109


State 70

   39 InitVal: T_LEFT_BRACE T_RIGHT_BRACE •

    $default  reduce using rule 39 (InitVal)


State 71

   38 InitVal: T_LEFT_BRACE T_COMMA • InitVal InitValRepeat T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 110
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 72

   37 InitVal: T_LEFT_BRACE InitVal • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 111


State 73

   29 VarDeclRepeat: T_COMMA • VarDef VarDeclRepeat

    T_IDENT  shift, and go to state 47

    VarDef  go to state 112


State 74

   27 VarDecl: T_INT VarDef T_COMMA VarDef VarDeclRepeat • T_DELIMITER

    T_DELIMITER  shift, and go to state 113


State 75

    8 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 8 (FuncDef)


State 76

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 114


State 77

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

    T_RIGHT_BRACKET  shift, and go to state 115


State 78

   21 ConstInitVal: T_LEFT_BRACE • T_RIGHT_BRACE
   22             | T_LEFT_BRACE • ConstInitVal T_RIGHT_BRACE
   23             | T_LEFT_BRACE • T_COMMA ConstInitVal ConstInitValRepeat T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_RIGHT_BRACE       shift, and go to state 116
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_COMMA             shift, and go to state 117
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 118
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 79

   16 ConstDef: T_IDENT T_DEFINE ConstInitVal •

    $default  reduce using rule 16 (ConstDef)


State 80

   20 ConstInitVal: ConstExp •

    $default  reduce using rule 20 (ConstInitVal)


State 81

   13 constDecl: T_CONST T_INT ConstDef T_COMMA ConstDef • constDeclRepeat T_DELIMITER

    T_COMMA  shift, and go to state 119

    $default  reduce using rule 14 (constDeclRepeat)

    constDeclRepeat  go to state 120


State 82

   46 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET • T_RIGHT_BRACKET
   47           | T_INT T_IDENT T_LEFT_BRACKET • Exp T_RIGHT_BRACKET FuncFParamRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_RIGHT_BRACKET     shift, and go to state 121
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 122
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 83

   26 VarDecl: T_INT • VarDef T_DELIMITER
   27        | T_INT • VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 47

    VarDef  go to state 11


State 84

   63 Stmt: T_BREAK • T_DELIMITER

    T_DELIMITER  shift, and go to state 123


State 85

   64 Stmt: T_CONTINUE • T_DELIMITER

    T_DELIMITER  shift, and go to state 124


State 86

   65 Stmt: T_RETURN • T_DELIMITER
   66     | T_RETURN • Exp T_DELIMITER

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 125
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 126
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 87

   61 Stmt: T_IF • T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
   62     | T_IF • T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1

    T_LEFT_PARENTHESIS  shift, and go to state 127


State 88

   51 Block: T_LEFT_BRACE T_RIGHT_BRACE •

    $default  reduce using rule 51 (Block)


State 89

   58 Stmt: T_DELIMITER •

    $default  reduce using rule 58 (Stmt)


State 90

   55 BlockItem: Decl •

    $default  reduce using rule 55 (BlockItem)


State 91

   60 Stmt: Block •

    $default  reduce using rule 60 (Stmt)


State 92

   52 Block: T_LEFT_BRACE BlockItem • BlockRepeat T_RIGHT_BRACE

    T_INT               shift, and go to state 83
    T_CONST             shift, and go to state 3
    T_BREAK             shift, and go to state 84
    T_CONTINUE          shift, and go to state 85
    T_RETURN            shift, and go to state 86
    T_IF                shift, and go to state 87
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 89
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    $default  reduce using rule 53 (BlockRepeat)

    Decl         go to state 90
    constDecl    go to state 8
    VarDecl      go to state 9
    Block        go to state 91
    BlockRepeat  go to state 128
    BlockItem    go to state 129
    Stmt         go to state 93
    Exp          go to state 94
    LVal         go to state 95
    PrimaryExp   go to state 36
    Number       go to state 37
    UnaryExp     go to state 38
    UnaryOp      go to state 39
    MulExp       go to state 40
    AddExp       go to state 46


State 93

   56 BlockItem: Stmt •

    $default  reduce using rule 56 (BlockItem)


State 94

   59 Stmt: Exp • T_DELIMITER

    T_DELIMITER  shift, and go to state 130


State 95

   57 Stmt: LVal • T_DEFINE Exp T_DELIMITER
   76 PrimaryExp: LVal •

    T_DEFINE  shift, and go to state 131

    $default  reduce using rule 76 (PrimaryExp)


State 96

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 7 (FuncDef)


State 97

   43 FuncFParams: FuncFParam T_COMMA FuncFParam • FuncFParamsRepeat

    T_COMMA  shift, and go to state 132

    $default  reduce using rule 44 (FuncFParamsRepeat)

    FuncFParamsRepeat  go to state 133


State 98

   75 PrimaryExp: T_LEFT_PARENTHESIS Exp T_RIGHT_PARENTHESIS •

    $default  reduce using rule 75 (PrimaryExp)


State 99

   80 UnaryExp: T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS •

    $default  reduce using rule 80 (UnaryExp)


State 100

   86 FuncRParams: Exp •
   87            | Exp • T_COMMA Exp FuncRParamsRepeat

    T_COMMA  shift, and go to state 134

    $default  reduce using rule 86 (FuncRParams)


State 101

   81 UnaryExp: T_IDENT T_LEFT_PARENTHESIS FuncRParams • T_RIGHT_PARENTHESIS

    T_RIGHT_PARENTHESIS  shift, and go to state 135


State 102

   72 LVal: T_IDENT T_LEFT_BRACKET Exp • T_RIGHT_BRACKET LValRepeat

    T_RIGHT_BRACKET  shift, and go to state 136


State 103

   91 MulExp: MulExp T_MUL UnaryExp •

    $default  reduce using rule 91 (MulExp)


State 104

   92 MulExp: MulExp T_DIV UnaryExp •

    $default  reduce using rule 92 (MulExp)


State 105

   93 MulExp: MulExp T_MOD UnaryExp •

    $default  reduce using rule 93 (MulExp)


State 106

   91 MulExp: MulExp • T_MUL UnaryExp
   92       | MulExp • T_DIV UnaryExp
   93       | MulExp • T_MOD UnaryExp
   95 AddExp: AddExp T_ADD MulExp •

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65
    T_MOD  shift, and go to state 66

    $default  reduce using rule 95 (AddExp)


State 107

   91 MulExp: MulExp • T_MUL UnaryExp
   92       | MulExp • T_DIV UnaryExp
   93       | MulExp • T_MOD UnaryExp
   96 AddExp: AddExp T_SUB MulExp •

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65
    T_MOD  shift, and go to state 66

    $default  reduce using rule 96 (AddExp)


State 108

   35 VarDefRepeat: T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET VarDefRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 137


State 109

   32 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat •
   33       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat • T_DEFINE InitVal

    T_DEFINE  shift, and go to state 138

    $default  reduce using rule 32 (VarDef)


State 110

   38 InitVal: T_LEFT_BRACE T_COMMA InitVal • InitValRepeat T_RIGHT_BRACE

    T_COMMA  shift, and go to state 139

    $default  reduce using rule 40 (InitValRepeat)

    InitValRepeat  go to state 140


State 111

   37 InitVal: T_LEFT_BRACE InitVal T_RIGHT_BRACE •

    $default  reduce using rule 37 (InitVal)


State 112

   29 VarDeclRepeat: T_COMMA VarDef • VarDeclRepeat

    T_COMMA  shift, and go to state 73

    $default  reduce using rule 28 (VarDeclRepeat)

    VarDeclRepeat  go to state 141


State 113

   27 VarDecl: T_INT VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER •

    $default  reduce using rule 27 (VarDecl)


State 114

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 6 (FuncDef)


State 115

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • ConstDefRepeat T_DEFINE ConstInitVal

    T_LEFT_BRACKET  shift, and go to state 142

    $default  reduce using rule 18 (ConstDefRepeat)

    ConstDefRepeat  go to state 143


State 116

   21 ConstInitVal: T_LEFT_BRACE T_RIGHT_BRACE •

    $default  reduce using rule 21 (ConstInitVal)


State 117

   23 ConstInitVal: T_LEFT_BRACE T_COMMA • ConstInitVal ConstInitValRepeat T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 144
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 118

   22 ConstInitVal: T_LEFT_BRACE ConstInitVal • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 145


State 119

   15 constDeclRepeat: T_COMMA • ConstDef constDeclRepeat

    T_IDENT  shift, and go to state 23

    ConstDef  go to state 146


State 120

   13 constDecl: T_CONST T_INT ConstDef T_COMMA ConstDef constDeclRepeat • T_DELIMITER

    T_DELIMITER  shift, and go to state 147


State 121

   46 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET T_RIGHT_BRACKET •

    $default  reduce using rule 46 (FuncFParam)


State 122

   47 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET Exp • T_RIGHT_BRACKET FuncFParamRepeat

    T_RIGHT_BRACKET  shift, and go to state 148


State 123

   63 Stmt: T_BREAK T_DELIMITER •

    $default  reduce using rule 63 (Stmt)


State 124

   64 Stmt: T_CONTINUE T_DELIMITER •

    $default  reduce using rule 64 (Stmt)


State 125

   65 Stmt: T_RETURN T_DELIMITER •

    $default  reduce using rule 65 (Stmt)


State 126

   66 Stmt: T_RETURN Exp • T_DELIMITER

    T_DELIMITER  shift, and go to state 149


State 127

   61 Stmt: T_IF T_LEFT_PARENTHESIS • Cond T_RIGHT_PARENTHESIS Stmt
   62     | T_IF T_LEFT_PARENTHESIS • Cond T_RIGHT_PARENTHESIS Stmt Stmt1

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Cond        go to state 150
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 151
    RelExp      go to state 152
    EqExp       go to state 153
    LAndExp     go to state 154
    LOrExp      go to state 155


State 128

   52 Block: T_LEFT_BRACE BlockItem BlockRepeat • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 156


State 129

   54 BlockRepeat: BlockItem • BlockRepeat

    T_INT               shift, and go to state 83
    T_CONST             shift, and go to state 3
    T_BREAK             shift, and go to state 84
    T_CONTINUE          shift, and go to state 85
    T_RETURN            shift, and go to state 86
    T_IF                shift, and go to state 87
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 89
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    $default  reduce using rule 53 (BlockRepeat)

    Decl         go to state 90
    constDecl    go to state 8
    VarDecl      go to state 9
    Block        go to state 91
    BlockRepeat  go to state 157
    BlockItem    go to state 129
    Stmt         go to state 93
    Exp          go to state 94
    LVal         go to state 95
    PrimaryExp   go to state 36
    Number       go to state 37
    UnaryExp     go to state 38
    UnaryOp      go to state 39
    MulExp       go to state 40
    AddExp       go to state 46


State 130

   59 Stmt: Exp T_DELIMITER •

    $default  reduce using rule 59 (Stmt)


State 131

   57 Stmt: LVal T_DEFINE • Exp T_DELIMITER

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 158
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 132

   45 FuncFParamsRepeat: T_COMMA • FuncFParam FuncFParamsRepeat

    T_INT  shift, and go to state 25

    FuncFParam  go to state 159


State 133

   43 FuncFParams: FuncFParam T_COMMA FuncFParam FuncFParamsRepeat •

    $default  reduce using rule 43 (FuncFParams)


State 134

   87 FuncRParams: Exp T_COMMA • Exp FuncRParamsRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 160
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 135

   81 UnaryExp: T_IDENT T_LEFT_PARENTHESIS FuncRParams T_RIGHT_PARENTHESIS •

    $default  reduce using rule 81 (UnaryExp)


State 136

   72 LVal: T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET • LValRepeat

    T_LEFT_BRACKET  shift, and go to state 161

    $default  reduce using rule 73 (LValRepeat)

    LValRepeat  go to state 162


State 137

   35 VarDefRepeat: T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET VarDefRepeat

    T_RIGHT_BRACKET  shift, and go to state 163


State 138

   33 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE • InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 164
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 139

   41 InitValRepeat: T_COMMA • InitVal InitValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 165
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 140

   38 InitVal: T_LEFT_BRACE T_COMMA InitVal InitValRepeat • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 166


State 141

   29 VarDeclRepeat: T_COMMA VarDef VarDeclRepeat •

    $default  reduce using rule 29 (VarDeclRepeat)


State 142

   19 ConstDefRepeat: T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET ConstDefRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 167


State 143

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat • T_DEFINE ConstInitVal

    T_DEFINE  shift, and go to state 168


State 144

   23 ConstInitVal: T_LEFT_BRACE T_COMMA ConstInitVal • ConstInitValRepeat T_RIGHT_BRACE

    T_COMMA  shift, and go to state 169

    $default  reduce using rule 24 (ConstInitValRepeat)

    ConstInitValRepeat  go to state 170


State 145

   22 ConstInitVal: T_LEFT_BRACE ConstInitVal T_RIGHT_BRACE •

    $default  reduce using rule 22 (ConstInitVal)


State 146

   15 constDeclRepeat: T_COMMA ConstDef • constDeclRepeat

    T_COMMA  shift, and go to state 119

    $default  reduce using rule 14 (constDeclRepeat)

    constDeclRepeat  go to state 171


State 147

   13 constDecl: T_CONST T_INT ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER •

    $default  reduce using rule 13 (constDecl)


State 148

   47 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET • FuncFParamRepeat

    T_LEFT_BRACKET  shift, and go to state 172

    $default  reduce using rule 49 (FuncFParamRepeat)

    FuncFParamRepeat  go to state 173


State 149

   66 Stmt: T_RETURN Exp T_DELIMITER •

    $default  reduce using rule 66 (Stmt)


State 150

   61 Stmt: T_IF T_LEFT_PARENTHESIS Cond • T_RIGHT_PARENTHESIS Stmt
   62     | T_IF T_LEFT_PARENTHESIS Cond • T_RIGHT_PARENTHESIS Stmt Stmt1

    T_RIGHT_PARENTHESIS  shift, and go to state 174


State 151

   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp
   97 RelExp: AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 97 (RelExp)


State 152

   98 RelExp: RelExp • T_LESS AddExp
   99       | RelExp • T_LARGE AddExp
  100       | RelExp • T_LESS_EQUAL AddExp
  101       | RelExp • T_LARGE_EQUAL AddExp
  102 EqExp: RelExp •

    T_LARGE        shift, and go to state 175
    T_LESS         shift, and go to state 176
    T_LARGE_EQUAL  shift, and go to state 177
    T_LESS_EQUAL   shift, and go to state 178

    $default  reduce using rule 102 (EqExp)


State 153

  103 EqExp: EqExp • T_EQUAL RelExp
  104      | EqExp • T_NOT_EQUAL RelExp
  105 LAndExp: EqExp •

    T_EQUAL      shift, and go to state 179
    T_NOT_EQUAL  shift, and go to state 180

    $default  reduce using rule 105 (LAndExp)


State 154

  106 LAndExp: LAndExp • T_AND EqExp
  107 LOrExp: LAndExp •

    T_AND  shift, and go to state 181

    $default  reduce using rule 107 (LOrExp)


State 155

   70 Cond: LOrExp •
  108 LOrExp: LOrExp • T_OR LAndExp

    T_OR  shift, and go to state 182

    $default  reduce using rule 70 (Cond)


State 156

   52 Block: T_LEFT_BRACE BlockItem BlockRepeat T_RIGHT_BRACE •

    $default  reduce using rule 52 (Block)


State 157

   54 BlockRepeat: BlockItem BlockRepeat •

    $default  reduce using rule 54 (BlockRepeat)


State 158

   57 Stmt: LVal T_DEFINE Exp • T_DELIMITER

    T_DELIMITER  shift, and go to state 183


State 159

   45 FuncFParamsRepeat: T_COMMA FuncFParam • FuncFParamsRepeat

    T_COMMA  shift, and go to state 132

    $default  reduce using rule 44 (FuncFParamsRepeat)

    FuncFParamsRepeat  go to state 184


State 160

   87 FuncRParams: Exp T_COMMA Exp • FuncRParamsRepeat

    T_COMMA  shift, and go to state 185

    $default  reduce using rule 88 (FuncRParamsRepeat)

    FuncRParamsRepeat  go to state 186


State 161

   74 LValRepeat: T_LEFT_BRACKET • Exp T_RIGHT_BRACKET LValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 187
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 162

   72 LVal: T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat •

    $default  reduce using rule 72 (LVal)


State 163

   35 VarDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • VarDefRepeat

    T_LEFT_BRACKET  shift, and go to state 108

    $default  reduce using rule 34 (VarDefRepeat)

    VarDefRepeat  go to state 188


State 164

   33 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal •

    $default  reduce using rule 33 (VarDef)


State 165

   41 InitValRepeat: T_COMMA InitVal • InitValRepeat

    T_COMMA  shift, and go to state 139

    $default  reduce using rule 40 (InitValRepeat)

    InitValRepeat  go to state 189


State 166

   38 InitVal: T_LEFT_BRACE T_COMMA InitVal InitValRepeat T_RIGHT_BRACE •

    $default  reduce using rule 38 (InitVal)


State 167

   19 ConstDefRepeat: T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET ConstDefRepeat

    T_RIGHT_BRACKET  shift, and go to state 190


State 168

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE • ConstInitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 191
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 169

   25 ConstInitValRepeat: T_COMMA • ConstInitVal ConstInitValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 192
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 170

   23 ConstInitVal: T_LEFT_BRACE T_COMMA ConstInitVal ConstInitValRepeat • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 193


State 171

   15 constDeclRepeat: T_COMMA ConstDef constDeclRepeat •

    $default  reduce using rule 15 (constDeclRepeat)


State 172

   50 FuncFParamRepeat: T_LEFT_BRACKET • Exp T_RIGHT_BRACKET FuncFParamRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 194
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 173

   47 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat •

    $default  reduce using rule 47 (FuncFParam)


State 174

   61 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS • Stmt
   62     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS • Stmt Stmt1

    T_BREAK             shift, and go to state 84
    T_CONTINUE          shift, and go to state 85
    T_RETURN            shift, and go to state 86
    T_IF                shift, and go to state 87
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 89
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Block       go to state 91
    Stmt        go to state 195
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 175

   99 RelExp: RelExp T_LARGE • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 196


State 176

   98 RelExp: RelExp T_LESS • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 197


State 177

  101 RelExp: RelExp T_LARGE_EQUAL • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 198


State 178

  100 RelExp: RelExp T_LESS_EQUAL • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 199


State 179

  103 EqExp: EqExp T_EQUAL • RelExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 151
    RelExp      go to state 200


State 180

  104 EqExp: EqExp T_NOT_EQUAL • RelExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 151
    RelExp      go to state 201


State 181

  106 LAndExp: LAndExp T_AND • EqExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 151
    RelExp      go to state 152
    EqExp       go to state 202


State 182

  108 LOrExp: LOrExp T_OR • LAndExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 151
    RelExp      go to state 152
    EqExp       go to state 153
    LAndExp     go to state 203


State 183

   57 Stmt: LVal T_DEFINE Exp T_DELIMITER •

    $default  reduce using rule 57 (Stmt)


State 184

   45 FuncFParamsRepeat: T_COMMA FuncFParam FuncFParamsRepeat •

    $default  reduce using rule 45 (FuncFParamsRepeat)


State 185

   89 FuncRParamsRepeat: T_COMMA • Exp FuncRParamsRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 204
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 186

   87 FuncRParams: Exp T_COMMA Exp FuncRParamsRepeat •

    $default  reduce using rule 87 (FuncRParams)


State 187

   74 LValRepeat: T_LEFT_BRACKET Exp • T_RIGHT_BRACKET LValRepeat

    T_RIGHT_BRACKET  shift, and go to state 205


State 188

   35 VarDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat •

    $default  reduce using rule 35 (VarDefRepeat)


State 189

   41 InitValRepeat: T_COMMA InitVal InitValRepeat •

    $default  reduce using rule 41 (InitValRepeat)


State 190

   19 ConstDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • ConstDefRepeat

    T_LEFT_BRACKET  shift, and go to state 142

    $default  reduce using rule 18 (ConstDefRepeat)

    ConstDefRepeat  go to state 206


State 191

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal •

    $default  reduce using rule 17 (ConstDef)


State 192

   25 ConstInitValRepeat: T_COMMA ConstInitVal • ConstInitValRepeat

    T_COMMA  shift, and go to state 169

    $default  reduce using rule 24 (ConstInitValRepeat)

    ConstInitValRepeat  go to state 207


State 193

   23 ConstInitVal: T_LEFT_BRACE T_COMMA ConstInitVal ConstInitValRepeat T_RIGHT_BRACE •

    $default  reduce using rule 23 (ConstInitVal)


State 194

   50 FuncFParamRepeat: T_LEFT_BRACKET Exp • T_RIGHT_BRACKET FuncFParamRepeat

    T_RIGHT_BRACKET  shift, and go to state 208


State 195

   61 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •
   62     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt • Stmt1

    T_ELSE  shift, and go to state 209

    T_INT               reduce using rule 61 (Stmt)
    T_INT               [reduce using rule 67 (Stmt1)]
    T_CONST             reduce using rule 61 (Stmt)
    T_CONST             [reduce using rule 67 (Stmt1)]
    T_BREAK             reduce using rule 61 (Stmt)
    T_BREAK             [reduce using rule 67 (Stmt1)]
    T_CONTINUE          reduce using rule 61 (Stmt)
    T_CONTINUE          [reduce using rule 67 (Stmt1)]
    T_RETURN            reduce using rule 61 (Stmt)
    T_RETURN            [reduce using rule 67 (Stmt1)]
    T_IF                reduce using rule 61 (Stmt)
    T_IF                [reduce using rule 67 (Stmt1)]
    T_ELSE              [reduce using rule 61 (Stmt)]
    T_ELSE              [reduce using rule 67 (Stmt1)]
    T_LEFT_PARENTHESIS  reduce using rule 61 (Stmt)
    T_LEFT_PARENTHESIS  [reduce using rule 67 (Stmt1)]
    T_LEFT_BRACE        reduce using rule 61 (Stmt)
    T_LEFT_BRACE        [reduce using rule 67 (Stmt1)]
    T_RIGHT_BRACE       reduce using rule 61 (Stmt)
    T_RIGHT_BRACE       [reduce using rule 67 (Stmt1)]
    T_NOT               reduce using rule 61 (Stmt)
    T_NOT               [reduce using rule 67 (Stmt1)]
    T_DELIMITER         reduce using rule 61 (Stmt)
    T_DELIMITER         [reduce using rule 67 (Stmt1)]
    T_IDENT             reduce using rule 61 (Stmt)
    T_IDENT             [reduce using rule 67 (Stmt1)]
    T_INTEGER_CONST     reduce using rule 61 (Stmt)
    T_INTEGER_CONST     [reduce using rule 67 (Stmt1)]
    T_ADD               reduce using rule 61 (Stmt)
    T_ADD               [reduce using rule 67 (Stmt1)]
    T_SUB               reduce using rule 61 (Stmt)
    T_SUB               [reduce using rule 67 (Stmt1)]
    $default            reduce using rule 61 (Stmt)

    Stmt1  go to state 210

    shift/reduce conflict on token T_ELSE:
       61 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •
       68 Stmt1: • T_ELSE Stmt
      Example: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt • T_ELSE Stmt
      Shift derivation
        Stmt
        ↳ 61: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
                                                               ↳ 62: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1
                                                                                                                           ↳ 68: • T_ELSE Stmt
      Reduce derivation
        Stmt
        ↳ 62: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt                                                          Stmt1
                                                               ↳ 61: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt • ↳ 68: T_ELSE Stmt

    reduce/reduce conflict on tokens T_INT, T_CONST, T_BREAK, T_CONTINUE, T_RETURN, T_IF, T_ELSE, T_LEFT_PARENTHESIS, T_LEFT_BRACE, T_RIGHT_BRACE, T_NOT, T_DELIMITER, T_IDENT, T_INTEGER_CONST, T_ADD, T_SUB:
       61 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •
       67 Stmt1: ε •
      Example: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •
      First reduce derivation
        Stmt
        ↳ 61: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •
      Second reduce derivation
        Stmt
        ↳ 62: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1
                                                                    ↳ 67: ε •

    shift/reduce conflict on token T_ELSE:
       67 Stmt1: ε •
       68 Stmt1: • T_ELSE Stmt
      Example: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt • T_ELSE Stmt
      Shift derivation
        Stmt
        ↳ 61: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
                                                               ↳ 62: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1
                                                                                                                           ↳ 68: • T_ELSE Stmt
      Reduce derivation
        Stmt
        ↳ 62: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt                                                                  Stmt1
                                                               ↳ 62: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1     ↳ 68: T_ELSE Stmt
                                                                                                                           ↳ 67: ε •



State 196

   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp
   99 RelExp: RelExp T_LARGE AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 99 (RelExp)


State 197

   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp
   98 RelExp: RelExp T_LESS AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 98 (RelExp)


State 198

   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp
  101 RelExp: RelExp T_LARGE_EQUAL AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 101 (RelExp)


State 199

   95 AddExp: AddExp • T_ADD MulExp
   96       | AddExp • T_SUB MulExp
  100 RelExp: RelExp T_LESS_EQUAL AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 100 (RelExp)


State 200

   98 RelExp: RelExp • T_LESS AddExp
   99       | RelExp • T_LARGE AddExp
  100       | RelExp • T_LESS_EQUAL AddExp
  101       | RelExp • T_LARGE_EQUAL AddExp
  103 EqExp: EqExp T_EQUAL RelExp •

    T_LARGE        shift, and go to state 175
    T_LESS         shift, and go to state 176
    T_LARGE_EQUAL  shift, and go to state 177
    T_LESS_EQUAL   shift, and go to state 178

    $default  reduce using rule 103 (EqExp)


State 201

   98 RelExp: RelExp • T_LESS AddExp
   99       | RelExp • T_LARGE AddExp
  100       | RelExp • T_LESS_EQUAL AddExp
  101       | RelExp • T_LARGE_EQUAL AddExp
  104 EqExp: EqExp T_NOT_EQUAL RelExp •

    T_LARGE        shift, and go to state 175
    T_LESS         shift, and go to state 176
    T_LARGE_EQUAL  shift, and go to state 177
    T_LESS_EQUAL   shift, and go to state 178

    $default  reduce using rule 104 (EqExp)


State 202

  103 EqExp: EqExp • T_EQUAL RelExp
  104      | EqExp • T_NOT_EQUAL RelExp
  106 LAndExp: LAndExp T_AND EqExp •

    T_EQUAL      shift, and go to state 179
    T_NOT_EQUAL  shift, and go to state 180

    $default  reduce using rule 106 (LAndExp)


State 203

  106 LAndExp: LAndExp • T_AND EqExp
  108 LOrExp: LOrExp T_OR LAndExp •

    T_AND  shift, and go to state 181

    $default  reduce using rule 108 (LOrExp)


State 204

   89 FuncRParamsRepeat: T_COMMA Exp • FuncRParamsRepeat

    T_COMMA  shift, and go to state 185

    $default  reduce using rule 88 (FuncRParamsRepeat)

    FuncRParamsRepeat  go to state 211


State 205

   74 LValRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET • LValRepeat

    T_LEFT_BRACKET  shift, and go to state 161

    $default  reduce using rule 73 (LValRepeat)

    LValRepeat  go to state 212


State 206

   19 ConstDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat •

    $default  reduce using rule 19 (ConstDefRepeat)


State 207

   25 ConstInitValRepeat: T_COMMA ConstInitVal ConstInitValRepeat •

    $default  reduce using rule 25 (ConstInitValRepeat)


State 208

   50 FuncFParamRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET • FuncFParamRepeat

    T_LEFT_BRACKET  shift, and go to state 172

    $default  reduce using rule 49 (FuncFParamRepeat)

    FuncFParamRepeat  go to state 213


State 209

   68 Stmt1: T_ELSE • Stmt

    T_BREAK             shift, and go to state 84
    T_CONTINUE          shift, and go to state 85
    T_RETURN            shift, and go to state 86
    T_IF                shift, and go to state 87
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 89
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Block       go to state 91
    Stmt        go to state 214
    Exp         go to state 94
    LVal        go to state 95
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 210

   62 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt Stmt1 •

    $default  reduce using rule 62 (Stmt)


State 211

   89 FuncRParamsRepeat: T_COMMA Exp FuncRParamsRepeat •

    $default  reduce using rule 89 (FuncRParamsRepeat)


State 212

   74 LValRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat •

    $default  reduce using rule 74 (LValRepeat)


State 213

   50 FuncFParamRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat •

    $default  reduce using rule 50 (FuncFParamRepeat)


State 214

   68 Stmt1: T_ELSE Stmt •

    $default  reduce using rule 68 (Stmt1)
