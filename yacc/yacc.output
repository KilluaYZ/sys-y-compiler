Terminals unused in grammar

    T_NULL
    T_DO
    T_FOR
    T_VAR
    T_BOOL_TRUE
    T_BOOL_FALSE
    T_NEWLINE
    T_ERRORCHAR
    T_HEX_CONST
    T_DEC_CONST
    T_OCT_CONST


Grammar

    0 $accept: CompRoot $end

    1 CompRoot: CompUnit

    2 CompUnit: CompUnit FuncDef
    3         | CompUnit Decl
    4         | FuncDef
    5         | Decl

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    7        | T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block
    9        | T_INT T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block

   10 Decl: constDecl
   11     | VarDecl

   12 constDecl: T_CONST T_INT ConstDef T_DELIMITER
   13          | T_CONST T_INT ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER

   14 constDeclRepeat: ε
   15                | T_COMMA ConstDef constDeclRepeat

   16 ConstDef: T_IDENT T_DEFINE ConstInitVal
   17         | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

   18 ConstDefRepeat: ε
   19               | T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat

   20 ConstInitVal: ConstExp
   21             | T_LEFT_BRACE T_RIGHT_BRACE
   22             | T_LEFT_BRACE ConstInitVal T_RIGHT_BRACE
   23             | T_LEFT_BRACE T_COMMA ConstInitVal ConstInitValRepeat T_RIGHT_BRACE

   24 ConstInitValRepeat: ε
   25                   | T_COMMA ConstInitVal ConstInitValRepeat

   26 VarDecl: T_INT VarDef T_DELIMITER
   27        | T_INT VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER

   28 VarDeclRepeat: ε
   29              | T_COMMA VarDef VarDeclRepeat

   30 VarDef: T_IDENT
   31       | T_IDENT T_DEFINE InitVal
   32       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

   34 VarDefRepeat: ε
   35             | T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat

   36 InitVal: Exp
   37        | T_LEFT_BRACE InitVal T_RIGHT_BRACE
   38        | T_LEFT_BRACE T_COMMA InitVal InitValRepeat T_RIGHT_BRACE
   39        | T_LEFT_BRACE T_RIGHT_BRACE

   40 InitValRepeat: ε
   41              | T_COMMA InitVal InitValRepeat

   42 FuncFParams: FuncFParam
   43            | FuncFParam T_COMMA FuncFParam FuncFParamsRepeat

   44 FuncFParamsRepeat: ε
   45                  | T_COMMA FuncFParam FuncFParamsRepeat

   46 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET T_RIGHT_BRACKET
   47           | T_INT T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat
   48           | T_INT T_IDENT

   49 FuncFParamRepeat: ε
   50                 | T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat

   51 Block: T_LEFT_BRACE T_RIGHT_BRACE
   52      | T_LEFT_BRACE BlockItem BlockRepeat T_RIGHT_BRACE

   53 BlockRepeat: ε
   54            | BlockItem BlockRepeat

   55 BlockItem: Decl
   56          | Stmt

   57 Stmt: LVal T_DEFINE Exp T_DELIMITER
   58     | T_DELIMITER
   59     | Exp T_DELIMITER
   60     | Block
   61     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
   62     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt T_ELSE Stmt
   63     | T_WHILE T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
   64     | T_BREAK T_DELIMITER
   65     | T_CONTINUE T_DELIMITER
   66     | T_RETURN T_DELIMITER
   67     | T_RETURN Exp T_DELIMITER

   68 Exp: AddExp

   69 Cond: LOrExp

   70 LVal: T_IDENT
   71     | T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat

   72 LValRepeat: ε
   73           | T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat

   74 PrimaryExp: T_LEFT_PARENTHESIS Exp T_RIGHT_PARENTHESIS
   75           | LVal
   76           | Number

   77 Number: T_INTEGER_CONST

   78 UnaryExp: PrimaryExp
   79         | T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS
   80         | T_IDENT T_LEFT_PARENTHESIS FuncRParams T_RIGHT_PARENTHESIS
   81         | UnaryOp UnaryExp

   82 UnaryOp: T_ADD
   83        | T_SUB
   84        | T_NOT

   85 FuncRParams: Exp
   86            | Exp T_COMMA Exp FuncRParamsRepeat

   87 FuncRParamsRepeat: ε
   88                  | T_COMMA Exp FuncRParamsRepeat

   89 MulExp: UnaryExp
   90       | MulExp T_MUL UnaryExp
   91       | MulExp T_DIV UnaryExp
   92       | MulExp T_MOD UnaryExp

   93 AddExp: MulExp
   94       | AddExp T_ADD MulExp
   95       | AddExp T_SUB MulExp

   96 RelExp: AddExp
   97       | RelExp T_LESS AddExp
   98       | RelExp T_LARGE AddExp
   99       | RelExp T_LESS_EQUAL AddExp
  100       | RelExp T_LARGE_EQUAL AddExp

  101 EqExp: RelExp
  102      | EqExp T_EQUAL RelExp
  103      | EqExp T_NOT_EQUAL RelExp

  104 LAndExp: EqExp
  105        | LAndExp T_AND EqExp

  106 LOrExp: LAndExp
  107       | LOrExp T_OR LAndExp

  108 ConstExp: AddExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_NULL <y_id> (258)
    T_INT <y_id> (259) 7 9 12 13 26 27 46 47 48
    T_VOID <y_id> (260) 6 8
    T_CONST <y_id> (261) 12 13
    T_WHILE <y_id> (262) 63
    T_BREAK <y_id> (263) 64
    T_CONTINUE <y_id> (264) 65
    T_DO <y_id> (265)
    T_RETURN <y_id> (266) 66 67
    T_IF <y_id> (267) 61 62
    T_FOR <y_id> (268)
    T_VAR <y_id> (269)
    T_LEFT_PARENTHESIS <y_id> (270) 6 7 8 9 61 62 63 74 79 80
    T_LEFT_BRACKET <y_id> (271) 17 19 32 33 35 46 47 50 71 73
    T_RIGHT_BRACKET <y_id> (272) 17 19 32 33 35 46 47 50 71 73
    T_LEFT_BRACE <y_id> (273) 21 22 23 37 38 39 51 52
    T_RIGHT_BRACE <y_id> (274) 21 22 23 37 38 39 51 52
    T_DEFINE <y_id> (275) 16 17 31 33 57
    T_NOT <y_id> (276) 84
    T_BOOL_TRUE <y_id> (277)
    T_BOOL_FALSE <y_id> (278)
    T_DELIMITER <y_id> (279) 12 13 26 27 57 58 59 64 65 66 67
    T_NEWLINE <y_id> (280)
    T_ERRORCHAR <y_id> (281)
    T_IDENT <y_id> (282) 6 7 8 9 16 17 30 31 32 33 46 47 48 70 71 79 80
    T_COMMA <y_id> (283) 13 15 23 25 27 29 38 41 43 45 86 88
    T_INTEGER_CONST <y_int> (284) 77
    T_HEX_CONST <y_int> (285)
    T_DEC_CONST <y_int> (286)
    T_OCT_CONST <y_int> (287)
    T_RIGHT_PARENTHESIS <y_id> (288) 6 7 8 9 61 62 63 74 79 80
    T_ELSE <y_id> (289) 62
    T_ADD <y_id> (290) 82 94
    T_SUB <y_id> (291) 83 95
    T_MUL <y_id> (292) 90
    T_DIV <y_id> (293) 91
    T_MOD <y_id> (294) 92
    T_EQUAL <y_id> (295) 102
    T_NOT_EQUAL <y_id> (296) 103
    T_LARGE <y_id> (297) 98
    T_LESS <y_id> (298) 97
    T_LARGE_EQUAL <y_id> (299) 100
    T_LESS_EQUAL <y_id> (300) 99
    T_OR <y_id> (301) 107
    T_AND <y_id> (302) 105


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    CompRoot <y_node> (49)
        on left: 1
        on right: 0
    CompUnit <y_node> (50)
        on left: 2 3 4 5
        on right: 1 2 3
    FuncDef <y_node> (51)
        on left: 6 7 8 9
        on right: 2 4
    Decl <y_node> (52)
        on left: 10 11
        on right: 3 5 55
    constDecl <y_node> (53)
        on left: 12 13
        on right: 10
    constDeclRepeat <y_node> (54)
        on left: 14 15
        on right: 13 15
    ConstDef <y_node> (55)
        on left: 16 17
        on right: 12 13 15
    ConstDefRepeat <y_node> (56)
        on left: 18 19
        on right: 17 19
    ConstInitVal <y_node> (57)
        on left: 20 21 22 23
        on right: 16 17 22 23 25
    ConstInitValRepeat <y_node> (58)
        on left: 24 25
        on right: 23 25
    VarDecl <y_node> (59)
        on left: 26 27
        on right: 11
    VarDeclRepeat <y_node> (60)
        on left: 28 29
        on right: 27 29
    VarDef <y_node> (61)
        on left: 30 31 32 33
        on right: 26 27 29
    VarDefRepeat <y_node> (62)
        on left: 34 35
        on right: 32 33 35
    InitVal <y_node> (63)
        on left: 36 37 38 39
        on right: 31 33 37 38 41
    InitValRepeat <y_node> (64)
        on left: 40 41
        on right: 38 41
    FuncFParams <y_node> (65)
        on left: 42 43
        on right: 6 7
    FuncFParamsRepeat <y_node> (66)
        on left: 44 45
        on right: 43 45
    FuncFParam <y_node> (67)
        on left: 46 47 48
        on right: 42 43 45
    FuncFParamRepeat <y_node> (68)
        on left: 49 50
        on right: 47 50
    Block <y_node> (69)
        on left: 51 52
        on right: 6 7 8 9 60
    BlockRepeat <y_node> (70)
        on left: 53 54
        on right: 52 54
    BlockItem <y_node> (71)
        on left: 55 56
        on right: 52 54
    Stmt <y_node> (72)
        on left: 57 58 59 60 61 62 63 64 65 66 67
        on right: 56 61 62 63
    Exp <y_node> (73)
        on left: 68
        on right: 36 47 50 57 59 67 71 73 74 85 86 88
    Cond <y_node> (74)
        on left: 69
        on right: 61 62 63
    LVal <y_node> (75)
        on left: 70 71
        on right: 57 75
    LValRepeat <y_node> (76)
        on left: 72 73
        on right: 71 73
    PrimaryExp <y_node> (77)
        on left: 74 75 76
        on right: 78
    Number <y_node> (78)
        on left: 77
        on right: 76
    UnaryExp <y_node> (79)
        on left: 78 79 80 81
        on right: 81 89 90 91 92
    UnaryOp <y_node> (80)
        on left: 82 83 84
        on right: 81
    FuncRParams <y_node> (81)
        on left: 85 86
        on right: 80
    FuncRParamsRepeat <y_node> (82)
        on left: 87 88
        on right: 86 88
    MulExp <y_node> (83)
        on left: 89 90 91 92
        on right: 90 91 92 93 94 95
    AddExp <y_node> (84)
        on left: 93 94 95
        on right: 68 94 95 96 97 98 99 100 108
    RelExp <y_node> (85)
        on left: 96 97 98 99 100
        on right: 97 98 99 100 101 102 103
    EqExp <y_node> (86)
        on left: 101 102 103
        on right: 102 103 104 105
    LAndExp <y_node> (87)
        on left: 104 105
        on right: 105 106 107
    LOrExp <y_node> (88)
        on left: 106 107
        on right: 69 107
    ConstExp <y_node> (89)
        on left: 108
        on right: 17 19 20 32 33 35


State 0

    0 $accept: • CompRoot $end

    T_INT    shift, and go to state 1
    T_VOID   shift, and go to state 2
    T_CONST  shift, and go to state 3

    CompRoot   go to state 4
    CompUnit   go to state 5
    FuncDef    go to state 6
    Decl       go to state 7
    constDecl  go to state 8
    VarDecl    go to state 9


State 1

    7 FuncDef: T_INT • T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    9        | T_INT • T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block
   26 VarDecl: T_INT • VarDef T_DELIMITER
   27        | T_INT • VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 10

    VarDef  go to state 11


State 2

    6 FuncDef: T_VOID • T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID • T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block

    T_IDENT  shift, and go to state 12


State 3

   12 constDecl: T_CONST • T_INT ConstDef T_DELIMITER
   13          | T_CONST • T_INT ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER

    T_INT  shift, and go to state 13


State 4

    0 $accept: CompRoot • $end

    $end  shift, and go to state 14


State 5

    1 CompRoot: CompUnit •
    2 CompUnit: CompUnit • FuncDef
    3         | CompUnit • Decl

    T_INT    shift, and go to state 1
    T_VOID   shift, and go to state 2
    T_CONST  shift, and go to state 3

    $default  reduce using rule 1 (CompRoot)

    FuncDef    go to state 15
    Decl       go to state 16
    constDecl  go to state 8
    VarDecl    go to state 9


State 6

    4 CompUnit: FuncDef •

    $default  reduce using rule 4 (CompUnit)


State 7

    5 CompUnit: Decl •

    $default  reduce using rule 5 (CompUnit)


State 8

   10 Decl: constDecl •

    $default  reduce using rule 10 (Decl)


State 9

   11 Decl: VarDecl •

    $default  reduce using rule 11 (Decl)


State 10

    7 FuncDef: T_INT T_IDENT • T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    9        | T_INT T_IDENT • T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block
   30 VarDef: T_IDENT •
   31       | T_IDENT • T_DEFINE InitVal
   32       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 17
    T_LEFT_BRACKET      shift, and go to state 18
    T_DEFINE            shift, and go to state 19

    $default  reduce using rule 30 (VarDef)


State 11

   26 VarDecl: T_INT VarDef • T_DELIMITER
   27        | T_INT VarDef • T_COMMA VarDef VarDeclRepeat T_DELIMITER

    T_DELIMITER  shift, and go to state 20
    T_COMMA      shift, and go to state 21


State 12

    6 FuncDef: T_VOID T_IDENT • T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID T_IDENT • T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block

    T_LEFT_PARENTHESIS  shift, and go to state 22


State 13

   12 constDecl: T_CONST T_INT • ConstDef T_DELIMITER
   13          | T_CONST T_INT • ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 23

    ConstDef  go to state 24


State 14

    0 $accept: CompRoot $end •

    $default  accept


State 15

    2 CompUnit: CompUnit FuncDef •

    $default  reduce using rule 2 (CompUnit)


State 16

    3 CompUnit: CompUnit Decl •

    $default  reduce using rule 3 (CompUnit)


State 17

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS • FuncFParams T_RIGHT_PARENTHESIS Block
    9        | T_INT T_IDENT T_LEFT_PARENTHESIS • T_RIGHT_PARENTHESIS Block

    T_INT                shift, and go to state 25
    T_RIGHT_PARENTHESIS  shift, and go to state 26

    FuncFParams  go to state 27
    FuncFParam   go to state 28


State 18

   32 VarDef: T_IDENT T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 42


State 19

   31 VarDef: T_IDENT T_DEFINE • InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 44
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 20

   26 VarDecl: T_INT VarDef T_DELIMITER •

    $default  reduce using rule 26 (VarDecl)


State 21

   27 VarDecl: T_INT VarDef T_COMMA • VarDef VarDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 47

    VarDef  go to state 48


State 22

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS • FuncFParams T_RIGHT_PARENTHESIS Block
    8        | T_VOID T_IDENT T_LEFT_PARENTHESIS • T_RIGHT_PARENTHESIS Block

    T_INT                shift, and go to state 25
    T_RIGHT_PARENTHESIS  shift, and go to state 49

    FuncFParams  go to state 50
    FuncFParam   go to state 28


State 23

   16 ConstDef: T_IDENT • T_DEFINE ConstInitVal
   17         | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

    T_LEFT_BRACKET  shift, and go to state 51
    T_DEFINE        shift, and go to state 52


State 24

   12 constDecl: T_CONST T_INT ConstDef • T_DELIMITER
   13          | T_CONST T_INT ConstDef • T_COMMA ConstDef constDeclRepeat T_DELIMITER

    T_DELIMITER  shift, and go to state 53
    T_COMMA      shift, and go to state 54


State 25

   46 FuncFParam: T_INT • T_IDENT T_LEFT_BRACKET T_RIGHT_BRACKET
   47           | T_INT • T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat
   48           | T_INT • T_IDENT

    T_IDENT  shift, and go to state 55


State 26

    9 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 57


State 27

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams • T_RIGHT_PARENTHESIS Block

    T_RIGHT_PARENTHESIS  shift, and go to state 58


State 28

   42 FuncFParams: FuncFParam •
   43            | FuncFParam • T_COMMA FuncFParam FuncFParamsRepeat

    T_COMMA  shift, and go to state 59

    $default  reduce using rule 42 (FuncFParams)


State 29

   74 PrimaryExp: T_LEFT_PARENTHESIS • Exp T_RIGHT_PARENTHESIS

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 60
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 30

   84 UnaryOp: T_NOT •

    $default  reduce using rule 84 (UnaryOp)


State 31

   70 LVal: T_IDENT •
   71     | T_IDENT • T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat
   79 UnaryExp: T_IDENT • T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS
   80         | T_IDENT • T_LEFT_PARENTHESIS FuncRParams T_RIGHT_PARENTHESIS

    T_LEFT_PARENTHESIS  shift, and go to state 61
    T_LEFT_BRACKET      shift, and go to state 62

    $default  reduce using rule 70 (LVal)


State 32

   77 Number: T_INTEGER_CONST •

    $default  reduce using rule 77 (Number)


State 33

   82 UnaryOp: T_ADD •

    $default  reduce using rule 82 (UnaryOp)


State 34

   83 UnaryOp: T_SUB •

    $default  reduce using rule 83 (UnaryOp)


State 35

   75 PrimaryExp: LVal •

    $default  reduce using rule 75 (PrimaryExp)


State 36

   78 UnaryExp: PrimaryExp •

    $default  reduce using rule 78 (UnaryExp)


State 37

   76 PrimaryExp: Number •

    $default  reduce using rule 76 (PrimaryExp)


State 38

   89 MulExp: UnaryExp •

    $default  reduce using rule 89 (MulExp)


State 39

   81 UnaryExp: UnaryOp • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 63
    UnaryOp     go to state 39


State 40

   90 MulExp: MulExp • T_MUL UnaryExp
   91       | MulExp • T_DIV UnaryExp
   92       | MulExp • T_MOD UnaryExp
   93 AddExp: MulExp •

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65
    T_MOD  shift, and go to state 66

    $default  reduce using rule 93 (AddExp)


State 41

   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp
  108 ConstExp: AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 108 (ConstExp)


State 42

   32 VarDef: T_IDENT T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_RIGHT_BRACKET  shift, and go to state 69


State 43

   37 InitVal: T_LEFT_BRACE • InitVal T_RIGHT_BRACE
   38        | T_LEFT_BRACE • T_COMMA InitVal InitValRepeat T_RIGHT_BRACE
   39        | T_LEFT_BRACE • T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_RIGHT_BRACE       shift, and go to state 70
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_COMMA             shift, and go to state 71
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 72
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 44

   31 VarDef: T_IDENT T_DEFINE InitVal •

    $default  reduce using rule 31 (VarDef)


State 45

   36 InitVal: Exp •

    $default  reduce using rule 36 (InitVal)


State 46

   68 Exp: AddExp •
   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 68 (Exp)


State 47

   30 VarDef: T_IDENT •
   31       | T_IDENT • T_DEFINE InitVal
   32       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat
   33       | T_IDENT • T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal

    T_LEFT_BRACKET  shift, and go to state 18
    T_DEFINE        shift, and go to state 19

    $default  reduce using rule 30 (VarDef)


State 48

   27 VarDecl: T_INT VarDef T_COMMA VarDef • VarDeclRepeat T_DELIMITER

    T_COMMA  shift, and go to state 73

    $default  reduce using rule 28 (VarDeclRepeat)

    VarDeclRepeat  go to state 74


State 49

    8 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 75


State 50

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams • T_RIGHT_PARENTHESIS Block

    T_RIGHT_PARENTHESIS  shift, and go to state 76


State 51

   17 ConstDef: T_IDENT T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 77


State 52

   16 ConstDef: T_IDENT T_DEFINE • ConstInitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 79
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 53

   12 constDecl: T_CONST T_INT ConstDef T_DELIMITER •

    $default  reduce using rule 12 (constDecl)


State 54

   13 constDecl: T_CONST T_INT ConstDef T_COMMA • ConstDef constDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 23

    ConstDef  go to state 81


State 55

   46 FuncFParam: T_INT T_IDENT • T_LEFT_BRACKET T_RIGHT_BRACKET
   47           | T_INT T_IDENT • T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat
   48           | T_INT T_IDENT •

    T_LEFT_BRACKET  shift, and go to state 82

    $default  reduce using rule 48 (FuncFParam)


State 56

   51 Block: T_LEFT_BRACE • T_RIGHT_BRACE
   52      | T_LEFT_BRACE • BlockItem BlockRepeat T_RIGHT_BRACE

    T_INT               shift, and go to state 83
    T_CONST             shift, and go to state 3
    T_WHILE             shift, and go to state 84
    T_BREAK             shift, and go to state 85
    T_CONTINUE          shift, and go to state 86
    T_RETURN            shift, and go to state 87
    T_IF                shift, and go to state 88
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_RIGHT_BRACE       shift, and go to state 89
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 90
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Decl        go to state 91
    constDecl   go to state 8
    VarDecl     go to state 9
    Block       go to state 92
    BlockItem   go to state 93
    Stmt        go to state 94
    Exp         go to state 95
    LVal        go to state 96
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 57

    9 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 9 (FuncDef)


State 58

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 97


State 59

   43 FuncFParams: FuncFParam T_COMMA • FuncFParam FuncFParamsRepeat

    T_INT  shift, and go to state 25

    FuncFParam  go to state 98


State 60

   74 PrimaryExp: T_LEFT_PARENTHESIS Exp • T_RIGHT_PARENTHESIS

    T_RIGHT_PARENTHESIS  shift, and go to state 99


State 61

   79 UnaryExp: T_IDENT T_LEFT_PARENTHESIS • T_RIGHT_PARENTHESIS
   80         | T_IDENT T_LEFT_PARENTHESIS • FuncRParams T_RIGHT_PARENTHESIS

    T_LEFT_PARENTHESIS   shift, and go to state 29
    T_NOT                shift, and go to state 30
    T_IDENT              shift, and go to state 31
    T_INTEGER_CONST      shift, and go to state 32
    T_RIGHT_PARENTHESIS  shift, and go to state 100
    T_ADD                shift, and go to state 33
    T_SUB                shift, and go to state 34

    Exp          go to state 101
    LVal         go to state 35
    PrimaryExp   go to state 36
    Number       go to state 37
    UnaryExp     go to state 38
    UnaryOp      go to state 39
    FuncRParams  go to state 102
    MulExp       go to state 40
    AddExp       go to state 46


State 62

   71 LVal: T_IDENT T_LEFT_BRACKET • Exp T_RIGHT_BRACKET LValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 103
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 63

   81 UnaryExp: UnaryOp UnaryExp •

    $default  reduce using rule 81 (UnaryExp)


State 64

   90 MulExp: MulExp T_MUL • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 104
    UnaryOp     go to state 39


State 65

   91 MulExp: MulExp T_DIV • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 105
    UnaryOp     go to state 39


State 66

   92 MulExp: MulExp T_MOD • UnaryExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 106
    UnaryOp     go to state 39


State 67

   94 AddExp: AddExp T_ADD • MulExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 107


State 68

   95 AddExp: AddExp T_SUB • MulExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 108


State 69

   32 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • VarDefRepeat
   33       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • VarDefRepeat T_DEFINE InitVal

    T_LEFT_BRACKET  shift, and go to state 109

    $default  reduce using rule 34 (VarDefRepeat)

    VarDefRepeat  go to state 110


State 70

   39 InitVal: T_LEFT_BRACE T_RIGHT_BRACE •

    $default  reduce using rule 39 (InitVal)


State 71

   38 InitVal: T_LEFT_BRACE T_COMMA • InitVal InitValRepeat T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 111
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 72

   37 InitVal: T_LEFT_BRACE InitVal • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 112


State 73

   29 VarDeclRepeat: T_COMMA • VarDef VarDeclRepeat

    T_IDENT  shift, and go to state 47

    VarDef  go to state 113


State 74

   27 VarDecl: T_INT VarDef T_COMMA VarDef VarDeclRepeat • T_DELIMITER

    T_DELIMITER  shift, and go to state 114


State 75

    8 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 8 (FuncDef)


State 76

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS • Block

    T_LEFT_BRACE  shift, and go to state 56

    Block  go to state 115


State 77

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal

    T_RIGHT_BRACKET  shift, and go to state 116


State 78

   21 ConstInitVal: T_LEFT_BRACE • T_RIGHT_BRACE
   22             | T_LEFT_BRACE • ConstInitVal T_RIGHT_BRACE
   23             | T_LEFT_BRACE • T_COMMA ConstInitVal ConstInitValRepeat T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_RIGHT_BRACE       shift, and go to state 117
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_COMMA             shift, and go to state 118
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 119
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 79

   16 ConstDef: T_IDENT T_DEFINE ConstInitVal •

    $default  reduce using rule 16 (ConstDef)


State 80

   20 ConstInitVal: ConstExp •

    $default  reduce using rule 20 (ConstInitVal)


State 81

   13 constDecl: T_CONST T_INT ConstDef T_COMMA ConstDef • constDeclRepeat T_DELIMITER

    T_COMMA  shift, and go to state 120

    $default  reduce using rule 14 (constDeclRepeat)

    constDeclRepeat  go to state 121


State 82

   46 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET • T_RIGHT_BRACKET
   47           | T_INT T_IDENT T_LEFT_BRACKET • Exp T_RIGHT_BRACKET FuncFParamRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_RIGHT_BRACKET     shift, and go to state 122
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 123
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 83

   26 VarDecl: T_INT • VarDef T_DELIMITER
   27        | T_INT • VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER

    T_IDENT  shift, and go to state 47

    VarDef  go to state 11


State 84

   63 Stmt: T_WHILE • T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt

    T_LEFT_PARENTHESIS  shift, and go to state 124


State 85

   64 Stmt: T_BREAK • T_DELIMITER

    T_DELIMITER  shift, and go to state 125


State 86

   65 Stmt: T_CONTINUE • T_DELIMITER

    T_DELIMITER  shift, and go to state 126


State 87

   66 Stmt: T_RETURN • T_DELIMITER
   67     | T_RETURN • Exp T_DELIMITER

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 127
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 128
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 88

   61 Stmt: T_IF • T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt
   62     | T_IF • T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt T_ELSE Stmt

    T_LEFT_PARENTHESIS  shift, and go to state 129


State 89

   51 Block: T_LEFT_BRACE T_RIGHT_BRACE •

    $default  reduce using rule 51 (Block)


State 90

   58 Stmt: T_DELIMITER •

    $default  reduce using rule 58 (Stmt)


State 91

   55 BlockItem: Decl •

    $default  reduce using rule 55 (BlockItem)


State 92

   60 Stmt: Block •

    $default  reduce using rule 60 (Stmt)


State 93

   52 Block: T_LEFT_BRACE BlockItem • BlockRepeat T_RIGHT_BRACE

    T_INT               shift, and go to state 83
    T_CONST             shift, and go to state 3
    T_WHILE             shift, and go to state 84
    T_BREAK             shift, and go to state 85
    T_CONTINUE          shift, and go to state 86
    T_RETURN            shift, and go to state 87
    T_IF                shift, and go to state 88
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 90
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    $default  reduce using rule 53 (BlockRepeat)

    Decl         go to state 91
    constDecl    go to state 8
    VarDecl      go to state 9
    Block        go to state 92
    BlockRepeat  go to state 130
    BlockItem    go to state 131
    Stmt         go to state 94
    Exp          go to state 95
    LVal         go to state 96
    PrimaryExp   go to state 36
    Number       go to state 37
    UnaryExp     go to state 38
    UnaryOp      go to state 39
    MulExp       go to state 40
    AddExp       go to state 46


State 94

   56 BlockItem: Stmt •

    $default  reduce using rule 56 (BlockItem)


State 95

   59 Stmt: Exp • T_DELIMITER

    T_DELIMITER  shift, and go to state 132


State 96

   57 Stmt: LVal • T_DEFINE Exp T_DELIMITER
   75 PrimaryExp: LVal •

    T_DEFINE  shift, and go to state 133

    $default  reduce using rule 75 (PrimaryExp)


State 97

    7 FuncDef: T_INT T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 7 (FuncDef)


State 98

   43 FuncFParams: FuncFParam T_COMMA FuncFParam • FuncFParamsRepeat

    T_COMMA  shift, and go to state 134

    $default  reduce using rule 44 (FuncFParamsRepeat)

    FuncFParamsRepeat  go to state 135


State 99

   74 PrimaryExp: T_LEFT_PARENTHESIS Exp T_RIGHT_PARENTHESIS •

    $default  reduce using rule 74 (PrimaryExp)


State 100

   79 UnaryExp: T_IDENT T_LEFT_PARENTHESIS T_RIGHT_PARENTHESIS •

    $default  reduce using rule 79 (UnaryExp)


State 101

   85 FuncRParams: Exp •
   86            | Exp • T_COMMA Exp FuncRParamsRepeat

    T_COMMA  shift, and go to state 136

    $default  reduce using rule 85 (FuncRParams)


State 102

   80 UnaryExp: T_IDENT T_LEFT_PARENTHESIS FuncRParams • T_RIGHT_PARENTHESIS

    T_RIGHT_PARENTHESIS  shift, and go to state 137


State 103

   71 LVal: T_IDENT T_LEFT_BRACKET Exp • T_RIGHT_BRACKET LValRepeat

    T_RIGHT_BRACKET  shift, and go to state 138


State 104

   90 MulExp: MulExp T_MUL UnaryExp •

    $default  reduce using rule 90 (MulExp)


State 105

   91 MulExp: MulExp T_DIV UnaryExp •

    $default  reduce using rule 91 (MulExp)


State 106

   92 MulExp: MulExp T_MOD UnaryExp •

    $default  reduce using rule 92 (MulExp)


State 107

   90 MulExp: MulExp • T_MUL UnaryExp
   91       | MulExp • T_DIV UnaryExp
   92       | MulExp • T_MOD UnaryExp
   94 AddExp: AddExp T_ADD MulExp •

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65
    T_MOD  shift, and go to state 66

    $default  reduce using rule 94 (AddExp)


State 108

   90 MulExp: MulExp • T_MUL UnaryExp
   91       | MulExp • T_DIV UnaryExp
   92       | MulExp • T_MOD UnaryExp
   95 AddExp: AddExp T_SUB MulExp •

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65
    T_MOD  shift, and go to state 66

    $default  reduce using rule 95 (AddExp)


State 109

   35 VarDefRepeat: T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET VarDefRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 139


State 110

   32 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat •
   33       | T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat • T_DEFINE InitVal

    T_DEFINE  shift, and go to state 140

    $default  reduce using rule 32 (VarDef)


State 111

   38 InitVal: T_LEFT_BRACE T_COMMA InitVal • InitValRepeat T_RIGHT_BRACE

    T_COMMA  shift, and go to state 141

    $default  reduce using rule 40 (InitValRepeat)

    InitValRepeat  go to state 142


State 112

   37 InitVal: T_LEFT_BRACE InitVal T_RIGHT_BRACE •

    $default  reduce using rule 37 (InitVal)


State 113

   29 VarDeclRepeat: T_COMMA VarDef • VarDeclRepeat

    T_COMMA  shift, and go to state 73

    $default  reduce using rule 28 (VarDeclRepeat)

    VarDeclRepeat  go to state 143


State 114

   27 VarDecl: T_INT VarDef T_COMMA VarDef VarDeclRepeat T_DELIMITER •

    $default  reduce using rule 27 (VarDecl)


State 115

    6 FuncDef: T_VOID T_IDENT T_LEFT_PARENTHESIS FuncFParams T_RIGHT_PARENTHESIS Block •

    $default  reduce using rule 6 (FuncDef)


State 116

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • ConstDefRepeat T_DEFINE ConstInitVal

    T_LEFT_BRACKET  shift, and go to state 144

    $default  reduce using rule 18 (ConstDefRepeat)

    ConstDefRepeat  go to state 145


State 117

   21 ConstInitVal: T_LEFT_BRACE T_RIGHT_BRACE •

    $default  reduce using rule 21 (ConstInitVal)


State 118

   23 ConstInitVal: T_LEFT_BRACE T_COMMA • ConstInitVal ConstInitValRepeat T_RIGHT_BRACE

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 146
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 119

   22 ConstInitVal: T_LEFT_BRACE ConstInitVal • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 147


State 120

   15 constDeclRepeat: T_COMMA • ConstDef constDeclRepeat

    T_IDENT  shift, and go to state 23

    ConstDef  go to state 148


State 121

   13 constDecl: T_CONST T_INT ConstDef T_COMMA ConstDef constDeclRepeat • T_DELIMITER

    T_DELIMITER  shift, and go to state 149


State 122

   46 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET T_RIGHT_BRACKET •

    $default  reduce using rule 46 (FuncFParam)


State 123

   47 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET Exp • T_RIGHT_BRACKET FuncFParamRepeat

    T_RIGHT_BRACKET  shift, and go to state 150


State 124

   63 Stmt: T_WHILE T_LEFT_PARENTHESIS • Cond T_RIGHT_PARENTHESIS Stmt

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Cond        go to state 151
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 152
    RelExp      go to state 153
    EqExp       go to state 154
    LAndExp     go to state 155
    LOrExp      go to state 156


State 125

   64 Stmt: T_BREAK T_DELIMITER •

    $default  reduce using rule 64 (Stmt)


State 126

   65 Stmt: T_CONTINUE T_DELIMITER •

    $default  reduce using rule 65 (Stmt)


State 127

   66 Stmt: T_RETURN T_DELIMITER •

    $default  reduce using rule 66 (Stmt)


State 128

   67 Stmt: T_RETURN Exp • T_DELIMITER

    T_DELIMITER  shift, and go to state 157


State 129

   61 Stmt: T_IF T_LEFT_PARENTHESIS • Cond T_RIGHT_PARENTHESIS Stmt
   62     | T_IF T_LEFT_PARENTHESIS • Cond T_RIGHT_PARENTHESIS Stmt T_ELSE Stmt

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Cond        go to state 158
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 152
    RelExp      go to state 153
    EqExp       go to state 154
    LAndExp     go to state 155
    LOrExp      go to state 156


State 130

   52 Block: T_LEFT_BRACE BlockItem BlockRepeat • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 159


State 131

   54 BlockRepeat: BlockItem • BlockRepeat

    T_INT               shift, and go to state 83
    T_CONST             shift, and go to state 3
    T_WHILE             shift, and go to state 84
    T_BREAK             shift, and go to state 85
    T_CONTINUE          shift, and go to state 86
    T_RETURN            shift, and go to state 87
    T_IF                shift, and go to state 88
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 90
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    $default  reduce using rule 53 (BlockRepeat)

    Decl         go to state 91
    constDecl    go to state 8
    VarDecl      go to state 9
    Block        go to state 92
    BlockRepeat  go to state 160
    BlockItem    go to state 131
    Stmt         go to state 94
    Exp          go to state 95
    LVal         go to state 96
    PrimaryExp   go to state 36
    Number       go to state 37
    UnaryExp     go to state 38
    UnaryOp      go to state 39
    MulExp       go to state 40
    AddExp       go to state 46


State 132

   59 Stmt: Exp T_DELIMITER •

    $default  reduce using rule 59 (Stmt)


State 133

   57 Stmt: LVal T_DEFINE • Exp T_DELIMITER

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 161
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 134

   45 FuncFParamsRepeat: T_COMMA • FuncFParam FuncFParamsRepeat

    T_INT  shift, and go to state 25

    FuncFParam  go to state 162


State 135

   43 FuncFParams: FuncFParam T_COMMA FuncFParam FuncFParamsRepeat •

    $default  reduce using rule 43 (FuncFParams)


State 136

   86 FuncRParams: Exp T_COMMA • Exp FuncRParamsRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 163
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 137

   80 UnaryExp: T_IDENT T_LEFT_PARENTHESIS FuncRParams T_RIGHT_PARENTHESIS •

    $default  reduce using rule 80 (UnaryExp)


State 138

   71 LVal: T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET • LValRepeat

    T_LEFT_BRACKET  shift, and go to state 164

    $default  reduce using rule 72 (LValRepeat)

    LValRepeat  go to state 165


State 139

   35 VarDefRepeat: T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET VarDefRepeat

    T_RIGHT_BRACKET  shift, and go to state 166


State 140

   33 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE • InitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 167
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 141

   41 InitValRepeat: T_COMMA • InitVal InitValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 43
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    InitVal     go to state 168
    Exp         go to state 45
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 142

   38 InitVal: T_LEFT_BRACE T_COMMA InitVal InitValRepeat • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 169


State 143

   29 VarDeclRepeat: T_COMMA VarDef VarDeclRepeat •

    $default  reduce using rule 29 (VarDeclRepeat)


State 144

   19 ConstDefRepeat: T_LEFT_BRACKET • ConstExp T_RIGHT_BRACKET ConstDefRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 41
    ConstExp    go to state 170


State 145

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat • T_DEFINE ConstInitVal

    T_DEFINE  shift, and go to state 171


State 146

   23 ConstInitVal: T_LEFT_BRACE T_COMMA ConstInitVal • ConstInitValRepeat T_RIGHT_BRACE

    T_COMMA  shift, and go to state 172

    $default  reduce using rule 24 (ConstInitValRepeat)

    ConstInitValRepeat  go to state 173


State 147

   22 ConstInitVal: T_LEFT_BRACE ConstInitVal T_RIGHT_BRACE •

    $default  reduce using rule 22 (ConstInitVal)


State 148

   15 constDeclRepeat: T_COMMA ConstDef • constDeclRepeat

    T_COMMA  shift, and go to state 120

    $default  reduce using rule 14 (constDeclRepeat)

    constDeclRepeat  go to state 174


State 149

   13 constDecl: T_CONST T_INT ConstDef T_COMMA ConstDef constDeclRepeat T_DELIMITER •

    $default  reduce using rule 13 (constDecl)


State 150

   47 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET • FuncFParamRepeat

    T_LEFT_BRACKET  shift, and go to state 175

    $default  reduce using rule 49 (FuncFParamRepeat)

    FuncFParamRepeat  go to state 176


State 151

   63 Stmt: T_WHILE T_LEFT_PARENTHESIS Cond • T_RIGHT_PARENTHESIS Stmt

    T_RIGHT_PARENTHESIS  shift, and go to state 177


State 152

   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp
   96 RelExp: AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 96 (RelExp)


State 153

   97 RelExp: RelExp • T_LESS AddExp
   98       | RelExp • T_LARGE AddExp
   99       | RelExp • T_LESS_EQUAL AddExp
  100       | RelExp • T_LARGE_EQUAL AddExp
  101 EqExp: RelExp •

    T_LARGE        shift, and go to state 178
    T_LESS         shift, and go to state 179
    T_LARGE_EQUAL  shift, and go to state 180
    T_LESS_EQUAL   shift, and go to state 181

    $default  reduce using rule 101 (EqExp)


State 154

  102 EqExp: EqExp • T_EQUAL RelExp
  103      | EqExp • T_NOT_EQUAL RelExp
  104 LAndExp: EqExp •

    T_EQUAL      shift, and go to state 182
    T_NOT_EQUAL  shift, and go to state 183

    $default  reduce using rule 104 (LAndExp)


State 155

  105 LAndExp: LAndExp • T_AND EqExp
  106 LOrExp: LAndExp •

    T_AND  shift, and go to state 184

    $default  reduce using rule 106 (LOrExp)


State 156

   69 Cond: LOrExp •
  107 LOrExp: LOrExp • T_OR LAndExp

    T_OR  shift, and go to state 185

    $default  reduce using rule 69 (Cond)


State 157

   67 Stmt: T_RETURN Exp T_DELIMITER •

    $default  reduce using rule 67 (Stmt)


State 158

   61 Stmt: T_IF T_LEFT_PARENTHESIS Cond • T_RIGHT_PARENTHESIS Stmt
   62     | T_IF T_LEFT_PARENTHESIS Cond • T_RIGHT_PARENTHESIS Stmt T_ELSE Stmt

    T_RIGHT_PARENTHESIS  shift, and go to state 186


State 159

   52 Block: T_LEFT_BRACE BlockItem BlockRepeat T_RIGHT_BRACE •

    $default  reduce using rule 52 (Block)


State 160

   54 BlockRepeat: BlockItem BlockRepeat •

    $default  reduce using rule 54 (BlockRepeat)


State 161

   57 Stmt: LVal T_DEFINE Exp • T_DELIMITER

    T_DELIMITER  shift, and go to state 187


State 162

   45 FuncFParamsRepeat: T_COMMA FuncFParam • FuncFParamsRepeat

    T_COMMA  shift, and go to state 134

    $default  reduce using rule 44 (FuncFParamsRepeat)

    FuncFParamsRepeat  go to state 188


State 163

   86 FuncRParams: Exp T_COMMA Exp • FuncRParamsRepeat

    T_COMMA  shift, and go to state 189

    $default  reduce using rule 87 (FuncRParamsRepeat)

    FuncRParamsRepeat  go to state 190


State 164

   73 LValRepeat: T_LEFT_BRACKET • Exp T_RIGHT_BRACKET LValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 191
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 165

   71 LVal: T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat •

    $default  reduce using rule 71 (LVal)


State 166

   35 VarDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • VarDefRepeat

    T_LEFT_BRACKET  shift, and go to state 109

    $default  reduce using rule 34 (VarDefRepeat)

    VarDefRepeat  go to state 192


State 167

   33 VarDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat T_DEFINE InitVal •

    $default  reduce using rule 33 (VarDef)


State 168

   41 InitValRepeat: T_COMMA InitVal • InitValRepeat

    T_COMMA  shift, and go to state 141

    $default  reduce using rule 40 (InitValRepeat)

    InitValRepeat  go to state 193


State 169

   38 InitVal: T_LEFT_BRACE T_COMMA InitVal InitValRepeat T_RIGHT_BRACE •

    $default  reduce using rule 38 (InitVal)


State 170

   19 ConstDefRepeat: T_LEFT_BRACKET ConstExp • T_RIGHT_BRACKET ConstDefRepeat

    T_RIGHT_BRACKET  shift, and go to state 194


State 171

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE • ConstInitVal

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 195
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 172

   25 ConstInitValRepeat: T_COMMA • ConstInitVal ConstInitValRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 78
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    ConstInitVal  go to state 196
    LVal          go to state 35
    PrimaryExp    go to state 36
    Number        go to state 37
    UnaryExp      go to state 38
    UnaryOp       go to state 39
    MulExp        go to state 40
    AddExp        go to state 41
    ConstExp      go to state 80


State 173

   23 ConstInitVal: T_LEFT_BRACE T_COMMA ConstInitVal ConstInitValRepeat • T_RIGHT_BRACE

    T_RIGHT_BRACE  shift, and go to state 197


State 174

   15 constDeclRepeat: T_COMMA ConstDef constDeclRepeat •

    $default  reduce using rule 15 (constDeclRepeat)


State 175

   50 FuncFParamRepeat: T_LEFT_BRACKET • Exp T_RIGHT_BRACKET FuncFParamRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 198
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 176

   47 FuncFParam: T_INT T_IDENT T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat •

    $default  reduce using rule 47 (FuncFParam)


State 177

   63 Stmt: T_WHILE T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS • Stmt

    T_WHILE             shift, and go to state 84
    T_BREAK             shift, and go to state 85
    T_CONTINUE          shift, and go to state 86
    T_RETURN            shift, and go to state 87
    T_IF                shift, and go to state 88
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 90
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Block       go to state 92
    Stmt        go to state 199
    Exp         go to state 95
    LVal        go to state 96
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 178

   98 RelExp: RelExp T_LARGE • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 200


State 179

   97 RelExp: RelExp T_LESS • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 201


State 180

  100 RelExp: RelExp T_LARGE_EQUAL • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 202


State 181

   99 RelExp: RelExp T_LESS_EQUAL • AddExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 203


State 182

  102 EqExp: EqExp T_EQUAL • RelExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 152
    RelExp      go to state 204


State 183

  103 EqExp: EqExp T_NOT_EQUAL • RelExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 152
    RelExp      go to state 205


State 184

  105 LAndExp: LAndExp T_AND • EqExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 152
    RelExp      go to state 153
    EqExp       go to state 206


State 185

  107 LOrExp: LOrExp T_OR • LAndExp

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 152
    RelExp      go to state 153
    EqExp       go to state 154
    LAndExp     go to state 207


State 186

   61 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS • Stmt
   62     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS • Stmt T_ELSE Stmt

    T_WHILE             shift, and go to state 84
    T_BREAK             shift, and go to state 85
    T_CONTINUE          shift, and go to state 86
    T_RETURN            shift, and go to state 87
    T_IF                shift, and go to state 88
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 90
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Block       go to state 92
    Stmt        go to state 208
    Exp         go to state 95
    LVal        go to state 96
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 187

   57 Stmt: LVal T_DEFINE Exp T_DELIMITER •

    $default  reduce using rule 57 (Stmt)


State 188

   45 FuncFParamsRepeat: T_COMMA FuncFParam FuncFParamsRepeat •

    $default  reduce using rule 45 (FuncFParamsRepeat)


State 189

   88 FuncRParamsRepeat: T_COMMA • Exp FuncRParamsRepeat

    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_NOT               shift, and go to state 30
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Exp         go to state 209
    LVal        go to state 35
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 190

   86 FuncRParams: Exp T_COMMA Exp FuncRParamsRepeat •

    $default  reduce using rule 86 (FuncRParams)


State 191

   73 LValRepeat: T_LEFT_BRACKET Exp • T_RIGHT_BRACKET LValRepeat

    T_RIGHT_BRACKET  shift, and go to state 210


State 192

   35 VarDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET VarDefRepeat •

    $default  reduce using rule 35 (VarDefRepeat)


State 193

   41 InitValRepeat: T_COMMA InitVal InitValRepeat •

    $default  reduce using rule 41 (InitValRepeat)


State 194

   19 ConstDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET • ConstDefRepeat

    T_LEFT_BRACKET  shift, and go to state 144

    $default  reduce using rule 18 (ConstDefRepeat)

    ConstDefRepeat  go to state 211


State 195

   17 ConstDef: T_IDENT T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat T_DEFINE ConstInitVal •

    $default  reduce using rule 17 (ConstDef)


State 196

   25 ConstInitValRepeat: T_COMMA ConstInitVal • ConstInitValRepeat

    T_COMMA  shift, and go to state 172

    $default  reduce using rule 24 (ConstInitValRepeat)

    ConstInitValRepeat  go to state 212


State 197

   23 ConstInitVal: T_LEFT_BRACE T_COMMA ConstInitVal ConstInitValRepeat T_RIGHT_BRACE •

    $default  reduce using rule 23 (ConstInitVal)


State 198

   50 FuncFParamRepeat: T_LEFT_BRACKET Exp • T_RIGHT_BRACKET FuncFParamRepeat

    T_RIGHT_BRACKET  shift, and go to state 213


State 199

   63 Stmt: T_WHILE T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •

    $default  reduce using rule 63 (Stmt)


State 200

   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp
   98 RelExp: RelExp T_LARGE AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 98 (RelExp)


State 201

   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp
   97 RelExp: RelExp T_LESS AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 97 (RelExp)


State 202

   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp
  100 RelExp: RelExp T_LARGE_EQUAL AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 100 (RelExp)


State 203

   94 AddExp: AddExp • T_ADD MulExp
   95       | AddExp • T_SUB MulExp
   99 RelExp: RelExp T_LESS_EQUAL AddExp •

    T_ADD  shift, and go to state 67
    T_SUB  shift, and go to state 68

    $default  reduce using rule 99 (RelExp)


State 204

   97 RelExp: RelExp • T_LESS AddExp
   98       | RelExp • T_LARGE AddExp
   99       | RelExp • T_LESS_EQUAL AddExp
  100       | RelExp • T_LARGE_EQUAL AddExp
  102 EqExp: EqExp T_EQUAL RelExp •

    T_LARGE        shift, and go to state 178
    T_LESS         shift, and go to state 179
    T_LARGE_EQUAL  shift, and go to state 180
    T_LESS_EQUAL   shift, and go to state 181

    $default  reduce using rule 102 (EqExp)


State 205

   97 RelExp: RelExp • T_LESS AddExp
   98       | RelExp • T_LARGE AddExp
   99       | RelExp • T_LESS_EQUAL AddExp
  100       | RelExp • T_LARGE_EQUAL AddExp
  103 EqExp: EqExp T_NOT_EQUAL RelExp •

    T_LARGE        shift, and go to state 178
    T_LESS         shift, and go to state 179
    T_LARGE_EQUAL  shift, and go to state 180
    T_LESS_EQUAL   shift, and go to state 181

    $default  reduce using rule 103 (EqExp)


State 206

  102 EqExp: EqExp • T_EQUAL RelExp
  103      | EqExp • T_NOT_EQUAL RelExp
  105 LAndExp: LAndExp T_AND EqExp •

    T_EQUAL      shift, and go to state 182
    T_NOT_EQUAL  shift, and go to state 183

    $default  reduce using rule 105 (LAndExp)


State 207

  105 LAndExp: LAndExp • T_AND EqExp
  107 LOrExp: LOrExp T_OR LAndExp •

    T_AND  shift, and go to state 184

    $default  reduce using rule 107 (LOrExp)


State 208

   61 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt •
   62     | T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt • T_ELSE Stmt

    T_ELSE  shift, and go to state 214

    $default  reduce using rule 61 (Stmt)


State 209

   88 FuncRParamsRepeat: T_COMMA Exp • FuncRParamsRepeat

    T_COMMA  shift, and go to state 189

    $default  reduce using rule 87 (FuncRParamsRepeat)

    FuncRParamsRepeat  go to state 215


State 210

   73 LValRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET • LValRepeat

    T_LEFT_BRACKET  shift, and go to state 164

    $default  reduce using rule 72 (LValRepeat)

    LValRepeat  go to state 216


State 211

   19 ConstDefRepeat: T_LEFT_BRACKET ConstExp T_RIGHT_BRACKET ConstDefRepeat •

    $default  reduce using rule 19 (ConstDefRepeat)


State 212

   25 ConstInitValRepeat: T_COMMA ConstInitVal ConstInitValRepeat •

    $default  reduce using rule 25 (ConstInitValRepeat)


State 213

   50 FuncFParamRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET • FuncFParamRepeat

    T_LEFT_BRACKET  shift, and go to state 175

    $default  reduce using rule 49 (FuncFParamRepeat)

    FuncFParamRepeat  go to state 217


State 214

   62 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt T_ELSE • Stmt

    T_WHILE             shift, and go to state 84
    T_BREAK             shift, and go to state 85
    T_CONTINUE          shift, and go to state 86
    T_RETURN            shift, and go to state 87
    T_IF                shift, and go to state 88
    T_LEFT_PARENTHESIS  shift, and go to state 29
    T_LEFT_BRACE        shift, and go to state 56
    T_NOT               shift, and go to state 30
    T_DELIMITER         shift, and go to state 90
    T_IDENT             shift, and go to state 31
    T_INTEGER_CONST     shift, and go to state 32
    T_ADD               shift, and go to state 33
    T_SUB               shift, and go to state 34

    Block       go to state 92
    Stmt        go to state 218
    Exp         go to state 95
    LVal        go to state 96
    PrimaryExp  go to state 36
    Number      go to state 37
    UnaryExp    go to state 38
    UnaryOp     go to state 39
    MulExp      go to state 40
    AddExp      go to state 46


State 215

   88 FuncRParamsRepeat: T_COMMA Exp FuncRParamsRepeat •

    $default  reduce using rule 88 (FuncRParamsRepeat)


State 216

   73 LValRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET LValRepeat •

    $default  reduce using rule 73 (LValRepeat)


State 217

   50 FuncFParamRepeat: T_LEFT_BRACKET Exp T_RIGHT_BRACKET FuncFParamRepeat •

    $default  reduce using rule 50 (FuncFParamRepeat)


State 218

   62 Stmt: T_IF T_LEFT_PARENTHESIS Cond T_RIGHT_PARENTHESIS Stmt T_ELSE Stmt •

    $default  reduce using rule 62 (Stmt)
